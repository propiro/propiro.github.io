{
    "version": "https://jsonfeed.org/version/1",
    "title": "propiro.github.io",
    "description": "",
    "home_page_url": "https://propiro.github.io",
    "feed_url": "https://propiro.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "piro"
    },
    "items": [
        {
            "id": "https://propiro.github.io/3d-faq.html",
            "url": "https://propiro.github.io/3d-faq.html",
            "title": "3D FAQ",
            "summary": "List of frequently asked, basic questions related to 3D, that could be answered by very simple google search, but were instead asked on one of online places, so you can link this article for lazy person to read. List isn't in any particular order. #Whats&hellip;",
            "content_html": "<p>List of frequently asked, basic questions related to 3D, that could be answered by very simple google search, but were instead asked on one of online places, so you can link this article for lazy person to read. <br>List isn't in any particular order.</p>\n<p><em>#Whats a good 3D modelling software?<br></em>Depends. What you want to model? Common software packages are:<br>3DS Max<br>Maya<br>Blender 3d<br>Cinema4D<br>Zbrush<br>Mudbox<br>Sketchup<br>and of course, immortal Wings3D</p>\n<p><em>#Whats a good texturing program?</em><br>Depends. What you want to texture? Industry is dominated by:<br>Substance Painter<br>Quixel Mixer<br>Substance Designer (more procedural, node based software)<br>Adobe Photoshop (used in old workflows)</p>\n<p>#I want to 3d model 3d models!<br>Pick up 3DS Max<br><br>#I want to make detailed characters!<br>Pick up Zbrush</p>\n<p>#I want to animate!<br>Pick up Maya</p>\n<p>#I want to make models for 3dprinting!<br>Fusion360, MOI3D, Freecad</p>\n<p>#I want to render nice things!<br>3DS Max, Maya, Blender3D, Cinema4d</p>\n<p>#I dont have money!<br>Pick up Blender3d</p>\n<p>#I want to make games!<br>Learn about what exactly you want to do in games, multiple people do multiple things. Assuming you want to make 3d models, pick up 3DS Max/Maya/Blender3d, also learn game engine - Unreal Engine / Unity3d are most popular ones.</p>\n<p>#Do I need 3d pen/tablet/3d mouse?<br>Not really, tablet helps with 3d sculpting though (Zbrush, Mudbox). 3D Mices are usually gimmick, only get one if you dont have other things to spent money on. Always try to borrow one / use it at studio/school before buying, or it might end up collecting dust.</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "quick_3d_tips",
                   "general_rant",
                   "3d"
            ],
            "date_published": "2021-08-11T00:39:13+02:00",
            "date_modified": "2021-08-11T02:55:51+02:00"
        },
        {
            "id": "https://propiro.github.io/ghetto-rigging-nas-to-keep-pushing-power-button-in-case-of-power-failure.html",
            "url": "https://propiro.github.io/ghetto-rigging-nas-to-keep-pushing-power-button-in-case-of-power-failure.html",
            "title": "Ghetto-rigging NAS to keep pushing power button in case of power failure ",
            "summary": "tl;dr Have NAS NAS started randomly (sometimes 3x a hour / every 3 months) shutting itself down, and \"auto power on\" didn't worked. Decided to make a watchdog device to turn it on. Made a watchdog. Here is a story of something that should took&hellip;",
            "content_html": "<p><em>tl;dr</em><br><em>Have NAS</em><br><em>NAS started randomly (sometimes 3x a hour / every 3 months) shutting itself down, and \"auto power on\" didn't worked.</em><br><em>Decided to make a watchdog device to turn it on.</em><br><em>Made a watchdog.</em><br><br>Here is a story of something that should took 1hour, and took 5h, because chinkman decided to mix the colors in usb cable, and I've assumed immidiately that I did everything wrong, checking polarisation of usb cable at the very end. Thats 2x 85cent attiny in damages, and 4h of crazy debugging of what was wrong.<br><br>Thats beign said:<br><br>My QNAP NAS for some time had a weird issue, where it'd shut itself down (thermals are ok, ram is ok, hdds are ok, believe me i've tried everything), and QNAP service after 2 months of pingponging my messages said finally that warranty period is over, sucks to be me. <br><br>I can live with 3-4minute downtimes before it reboots, however, the most annoying problem (connected to the shutdowns I assume) is that power button dont work immidiately - I press it, and there is random chance of it working and booting, or just powering system for a split second, and shutting it down (capacitor issue? Im lacking technological knowledge to diagnose it sadly). Sometimes it works at 3rd press, sometimes at 40th press, and the attempted boot - shutdown cycle takes around 5 seconds, and I really dont want to spent 5 minutes standing near my hardware rack pressing button.<br><br>So, a watchdog idea was made:<br>- it has to be as low invasive as possible<br>- it should give me ability to swap parts rather quickly, without much desoldering<br>- it should be inside NAS, no dangling cables outside<br>- it should be somewhat \"smart\" - dont just press the button infinitely, but detect if system turned on / shut itself down<br>- it can be turned on/off from outside without deassembling the case, in case i want to swap disks for example<br>- must be made using zipties<br><br>Schemats is quite simple:</p>\n<figure class=\"post__image\" ><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/23/2021-02-13_14h17_04.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/23/responsive/2021-02-13_14h17_04-xs.png 300w ,https://propiro.github.io/media/posts/23/responsive/2021-02-13_14h17_04-sm.png 480w ,https://propiro.github.io/media/posts/23/responsive/2021-02-13_14h17_04-md.png 768w\"  alt=\"watchdog schematic\" width=\"1235\" height=\"886\">\n<figcaption >watchdog schematic</figcaption>\n</figure>\n<p><br>simple schemat of part connections<br>So general idea is:<br>Its powered by step-down converter that makes 5V for attiny85 from NAS 12V, its soldered directly to the motherboard pads to feed power as soon as power connector is plugged in - there is small slide-switch outside so i can cut off power to attiny.<br>It monitors USB power, resistor is to eliminate noise (randomly picked because im lazy, values are calibrated in code). At first i've used pins from debug interface and check for logical signal of 3.3v, but silly me realised after few minutes, that at some point interface might stop sending things, so after several minutes of beign inactive, watchdogs started pressing power button again, because of inactivity. <br>In case no USB power is detected, it starts routine of \"pressing\" the switch for 200ms through relay breakboard, and gave it some time to finish boot sequence (if it starts)<br><br>Few pictures of how it went, with short descriptions.</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"2\">\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h39_19.png\" data-size=\"2330x1831\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h39_19-thumbnail.png\" alt=\"\" width=\"768\" height=\"604\"></a>\n<figcaption>ghetto bondage</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/23/gallery/photo5852529884906239716.jpg\" data-size=\"1280x960\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/23/gallery/photo5852529884906239716-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"576\"></a>\n<figcaption>power button cables</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/23/gallery/photo5852529884906239725.jpg\" data-size=\"1280x960\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/23/gallery/photo5852529884906239725-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"576\"></a>\n<figcaption>more bondage</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/23/gallery/photo5852529884906239710.jpg\" data-size=\"1280x960\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/23/gallery/photo5852529884906239710-thumbnail.jpg\" alt=\"\" width=\"768\" height=\"576\"></a>\n<figcaption>usb power ping feeding HIGH signal</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h40_07.png\" data-size=\"1221x853\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h40_07-thumbnail.png\" alt=\"\" width=\"768\" height=\"537\"></a>\n<figcaption>testing watchdog, along with simple step-down converter (from 20V to 5 so attiny doesnt melt)</figcaption>\n</figure>\n</div></div>\n<p>And code that runs on the watchdog:<br><br><br><code>#define NUM_SAMPLES 10</code><br><code>#define LED_PIN 1</code><br><code>#define ANALOG_PIN A3</code><br><code>#define POWER_PIN 4</code><br><code>#define RESTART_DELAY 1400</code><br><code>#define WORKING_VOLTAGE 4.1</code><br><br><code>bool restartingLED = true;</code><br><code>int samplesSum = 0;</code><br><code>unsigned char sample_count = 0;</code><br><code>float voltage = 0.0;</code><br><br><code>// the setup routine runs once when you press reset:</code><br><code>void setup() {</code><br><code>randomSeed(analogRead(0));</code><br><code>// initialize the digital pin as an output.</code><br><code>//pinMode(0, OUTPUT); //LED on Model B</code><br><code>pinMode(LED_PIN, OUTPUT); //LED on Model A or Pro</code><br><code>pinMode(POWER_PIN, OUTPUT); // relay</code><br><code>pinMode(ANALOG_PIN, INPUT); //</code><br><br><code>}</code><br><br><code>// the loop routine runs over and over again forever:</code><br><code>void loop() {</code><br><br><code>//pressPower(100);</code><br><code>//delay(1000);</code><br><code>while (sample_count &lt; NUM_SAMPLES) {</code><br><br><code>//samplesSum += debugAnalogRead(300, 100);</code><br><br><code>samplesSum += analogRead(ANALOG_PIN);</code><br><code>sample_count++;</code><br><code>if (restartingLED == true) {digitalWrite(1, HIGH);}</code><br><code>delay(100);</code><br><code>if (restartingLED == true) {digitalWrite(1, LOW);}</code><br><br><code>}</code><br><code>voltage = ((float)samplesSum / (float)NUM_SAMPLES * 5.015) / 1024.0;</code><br><br><code>if (voltage &lt; WORKING_VOLTAGE)</code><br><code>{</code><br><br><code>restartingLED = true;</code><br><code>pressPower(200);</code><br><code>}</code><br><code>if (voltage &gt;= WORKING_VOLTAGE)</code><br><code>{</code><br><code>restartingLED = false;</code><br><code>}</code><br><code>// wait for a second</code><br><br><code>sample_count = 0;</code><br><code>samplesSum = 0;</code><br><code>}</code><br><br><br><code>void pressPower(float delayVal)</code><br><code>{</code><br><code>digitalWrite( 4, HIGH);</code><br><code>delay(delayVal);</code><br><code>digitalWrite(4, LOW);</code><br><code>delay(RESTART_DELAY - delayVal);</code><br><br><code>}</code><br><br><code>void turnLed(int state)</code><br><code>{</code><br><code>if (state == 0)</code><br><code>{</code><br><code>digitalWrite(1, LOW);</code><br><code>}</code><br><code>if (state == 1)</code><br><code>{</code><br><code>digitalWrite(1, HIGH);</code><br><code>}</code><br><code>}</code><br><br><code>float debugAnalogRead(float voltage, float range)</code><br><code>{</code><br><code>float voltageReturn = 0;</code><br><code>voltageReturn = voltage + random(-1 * range, range);</code><br><br><code>return voltageReturn;</code><br><code>}</code><br><br> What I've learned during making this, is that to never trust chinesse manufacturers - my usb cable that i've used had colors swapped for ground and vcc, so i've managed to burn 2 attinys before checking EVERYTHING on my side, only to find this issue after 5h of debugging.<br><br>Anyway, it works, and by frantical clicking it lets me know IF the server actually died ;-)<br><br> <br><br> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "technology",
                   "hacks"
            ],
            "date_published": "2021-05-26T19:59:50+02:00",
            "date_modified": "2021-12-23T07:47:28+01:00"
        },
        {
            "id": "https://propiro.github.io/a-handy-dictionary-of-terminology-used-by-3d-artist-doing-3d-art-in-3d-art-industry.html",
            "url": "https://propiro.github.io/a-handy-dictionary-of-terminology-used-by-3d-artist-doing-3d-art-in-3d-art-industry.html",
            "title": "A handy dictionary of terminology used by 3d artist doing 3d art in 3d art industry.",
            "summary": "Recently more and more people are picking 3d art/ gameart (thanks, 𝓫𝓵𝓮𝓷𝓭𝓮𝓻) as their hobby and/or career path, and I've noticed more and more confusion about all the weird words the 3d dinosaurs throw at newbies - Having this in mind, I've decided to start&hellip;",
            "content_html": "<address>Recently more and more people are picking  3d art/ gameart (thanks, 𝓫𝓵𝓮𝓷𝓭𝓮𝓻) as their hobby and/or career path, and I've noticed more and more confusion about all the weird words the 3d dinosaurs throw at newbies - Having this in mind, I've decided to start this article/blogpost, that'll most likely grow in size. I'll try to explain things in layman terms, without getting into any math, but some knowledge or googling on your own will be required, especially after you have some keywords from this list. Starting with terms from last week:</address>\n<h2><strong>#A</strong></h2>\n<p> </p>\n<p>Albedo map - technically, albedo its a ratio of radiation reflected to radiation incident. For CG, all you need to know that albedo map is a map of colors, without any light data - no shadows, no ao, no specular reflections applied onto diffuse.</p>\n<p>Ambient Occlusion - often used as Occlusion (bit incorrect), Ambient (bit incorrect), AO - name for a shading type that shows how much an object is \"occluded\" from or exposed to light, and that include self-shadowing - if you have a 3d box, and make hole in it, naturally the hole inside should be darker, since ambient light have more troubles getting inside - this applies to almost all objects that are close to each other. You can either render AO in realtime using various techniques like SSAO, or bake it into a texturemap. </p>\n<p>Ambient Occlusion map - AO map - a baked (rendered) map with detailed informations about ambient occlusion lighting - sometimes called lightmap as well, but not every lightmap might contain ao, and not every ao map could contain shadows - sometimes these are two different sets of maps, usually used inside game engines on levels. Usually stored in single 8bit channel.</p>\n<p>Alpha card - coloquial term describing a texture with alpha, used most of the time to mimic fur/hair/brows/leaves and similiar objects, that are modelled on sumplified geometry, but contain a lot of transparency. Often used by character artists / foliage artists</p>\n<h2>#B</h2>\n<p>Banding - an unwanted effect on normalmap (or gradients in general), happening because there is not enough colors to make smooth transition from one color to another. Usually fixed by forcing dithering, or using higher BPP value.</p>\n<p>Baking, baking maps - a process of rendering effects on 2d textures - most commonly used to describe transfering high detail data from highpoly to lowpoly models, as well ambient occlusion, curvature, thickness - there is a lot of map types. You'll often heard people talking about \"baking normals\", meaning they'll bake geometry normals from highpoly model. If someone say he'll bake some lightmaps, means they'll be baking  light data to map/set of maps to make it more perfomance-wise, without using realtime lighting (Ambient occlusion map is example of light baked into texture - all those nice shadows in corners are pre-rendered, because calculating them on the go is expensive) </p>\n<p>Basecolor - sometimes used instead of Albedo - means the color of a surface, unaffected by light. A core component in PBR rendering/texturing - you want this surface component to represent just the color, without influence of light/shadow/specularity/roughness/ etc etc. If its yellow, its yellow on basecolor, and just because blue light makes it green, changes nothing.  While packing maps for models, usually having _COL prefix at the end.</p>\n<p>Binormal</p>\n<p>Bleeding, color bleeding, mipmap bleeding, light bleeding - a term used to describe texture issue that happens when pixels from one part of the unwrapped mesh influent/mix/blend with pixels on different part - cause either by low resolution, wrong unwrapping, no padding/margin on textures, sometimes by incorrect light baking settings.</p>\n<p>Blender - a device used to blend things.</p>\n<p>Booleans, boolean modelling - modelling technique (often used with dynamesh when describing) based on adding/substracting shapes one from another, rather than modelling the shape from scratch. Most important advantage is timesaving, while disadventage is very messy topology that require cleaning, and not perfect control over topology. Used in constructive solid geometry.</p>\n<p>Brep - acronym for Boundary REPresentation - basically what most people call \"cad modelling\" - you dont operate on polygons/verticles, but instead you create surfaces using lines/curves, and extrude/boolean them. Look how Fusion360 / Moi3d modelling looks like.</p>\n<p>Bump map - a very general term describing a map that stores information about disortion of surface normals of an object - it could be heighmap, normalmap, displacement map, flow map, parallax map - anything that is stored in a 2d space that influences surface normals of 3d object. Most commonly when someone say \"bumpmap\" they mean black and white image that makes surface of a model looks \"bumpy\" or more \"noisey\" - like a concrete for example, by changing its pixel heigh on texture (it doesnt modify actual geometry).</p>\n<p>BPP - bit per pixel - amound of bits you use to store pixel value, commonly its 8 bits for each channel (so R,G,B takes 24Bits, if you add Alpha channel, RGBA takes 32Bits) to store color information. With normalmaps, its more common to store (at least for work, not finished, engine-ready content) data in 16 BPP space, to fit more informations and prevent banding.</p>\n<h2>#C</h2>\n<p>CAD - Acronym for Computer Aided Design, which means every work related to art you do on PC rather than with pen and paper - usually used incorrectly to describe BREP modelling style. </p>\n<p>Chunk, UV Chunk - same as UV island - a separate piece of unwrapped model [resent on UV map, can be one triangle, can be group of triangles/quads/ngons.</p>\n<p>Collada - file format (COLLA borative D esign A ctivity) used as an alternative to FBX to transfer 3d data between compatibile applications, without limitations of OBJ file - It could include skinning, animation, and physic, BREP data and morphs for example, while OBJ only stores polygonal data of models.</p>\n<h2>#D</h2>\n<p>DAE - Digital Asset Exchange format that store data in XML format, look at collada for more thorough description.</p>\n<p>Diffuse map - Map/Texture describing color of the surface, with addition to shading/reflections baked into it - you can merge ambient occlusion pass to fake depth on the model, or highlight corners to give them fake shiny look - sometimes refeered to as an \"old workflow\" - as it was common to mix lighting data with color data in pre-PBR authoring methods.</p>\n<p>Displacement - technique that makes verticles of mesh change their position according to map/supplied parameter value, making it either higher or lowed from the original surface. Main difference between displacement and normalmapping/parallax mapping / bumpmapping is that actual geometry is changed, instead of just texture pixel data. </p>\n<p>Displacement map - a texture map with pixels representing values for displacement alghoritm, making geometry displace according to UV mapped data. Note that to see any kind of change you need actual geometry there to be displaced, so it works best on high-density meshes (if you map displacement texture to flat, 2 triangle plane, it wont get any displacement, because there is no verticles to displace except 4 corner ones) </p>\n<p>Dithering - a technique of using noise to hide banding / color changes on gradients, or blending phases with alpha - with high enough resolutions, making certain patterns of noise pixels, its possible to cheat eyes/brain into thinking that color transition is smooth, while its not.   </p>\n<p>Dynamesh - Originally Zbrush technique often used in pair with boolean modelling, that makes a dense, more-or-less even topology on source geometry, allowing user to sculpt on that model with ease. While used with \"Boolean-Dynamesh\" technique, usually means making dense topology on model, so it can be easily smoothed on corners, making it suitable for baking maps to lowpoly.</p>\n<h2>#E</h2>\n<p>Edge - a line between two points. Three edges (actually two, but you want to avoid it as its considered a bug/issue) or more are required to make a closed surface that can be shaded.</p>\n<p>Edge Flow - a general term used to describe \"smooth\" way across edges on model.</p>\n<h2>#F</h2>\n<p>Fbx - fileformat commonly used in 3d industry, Shortcut for FilmBox. Favoured for ability to transfer lot of additional informations alongside geometry, like lights, cameras, some modificators (like turbosmooth or skin) between applications and engines.</p>\n<p>Flowmap</p>\n<h2>#G</h2>\n<h2>#H</h2>\n<p>Hard Edge</p>\n<p>Heightmap</p>\n<h2>#I</h2>\n<p>Interpolation</p>\n<h2>#J</h2>\n<p>Jitter</p>\n<p>Joint Surfaces</p>\n<h2>#K</h2>\n<h2>#L</h2>\n<p>Lightmap - sometimes called AO map or ambient map - a map that contains lighting information, usually stored inside 8Bit color space (so, a single gray channel), unless you need something like Directional normal map.</p>\n<p>Lookdev</p>\n<h2>#M</h2>\n<p>Max - Autodesk 3d studio max, modelling package, favoured mostly by modellers. </p>\n<p>Maya - Autodesk Maya, modelling package, favoured mostly by animators.</p>\n<p>Megascans, quixel megascans - colloquial name for photoscanned assets, available on Epics Megascan store - usually environmental, very realistic and very heavy in terms of geometry 3d models that werent modelled by hand, but \"generated\" from lots of 2d photos, using technique called photogrammetry (some assets are scanned using different ways, but thats another tale).</p>\n<p>Metalness, metallic - property of surface defining how conductive it is - while it should be either 0 or 1 (black or white, not grayscale) - as things are either conductive or dielectric (non-conductive), things like dirt or rust tend to be represented by grayscale values, which often cause problems in realtime engines, like unity or unreal (without help of clipping values to 0/1).</p>\n<p>Metalness map - a map that stores metal value of mapped surface, 0 beign non-metallic, white beign metallic. Used in PBR rendering, tied to IOR / Index of Refraction known from offline-renderers. Usually stored as component alongside other maps in RMA/MRA, or separately as 8bit grayscale, commonly using _MET suffix in name.</p>\n<h2>#N</h2>\n<p>Node, node-based</p>\n<p>Normal</p>\n<p>Normalmap</p>\n<h2>#O</h2>\n<p>Obj - Wavefront  Object file format - very popular in open source softwares, able to store simple geometry and material data inside.</p>\n<p>Offline Rendering - rarely heard term, describing anything that is NOT realtime - if you need to press f9 and wait 10 minutes for one frame to render, you can consider it offline rendering (unless you play game at 0.01 FPS, then... then its just very slow) - usually outputs of offline renderings are used later, be it as a source material/ingrdient of realtime-application, or part of a movie that will be played in 60frames per second, even if rendering it took 2 months.</p>\n<h2>#P</h2>\n<p>Packmap, packed map - term used for a map that is composed of various sub-maps describing different things (so technically normalmap is packmap as well), usually multiple 8 bit channels with data into one 24/32 bit image, which while might look odd, stores valuable informations for engine/renderer. A most common example would be RMA / MRA map - RMA means [R]oughness, [M]etalness, [A]mbient data separated to channels of texture - Red, Green, Blue (and alpha if used). MRA is [M]etalness, [R]oughness, [A]mbient - different order of data, there is a reason for storing Roughness on green, but its too technical, so maybe another time (its about how DXT textures are compressing channels)</p>\n<p>Padding - texture padding, margin, uv margin - a distance between uv chunks on UV map, maintained to prevent texture bleeds from one pixel group to another one on UV pieces that are too close to each other.  </p>\n<p>Photogrammetry</p>\n<p>Polygon - poly + gon, sometimes used in place for n-gon - means a surface object defined by verticles and edges, often are filled using triangles to five it a solid look (opposed to wireframe look).</p>\n<p>Polymodelling</p>\n<p>Post-Processing, postpro - term used for any tricks/work done after rendering is done - this applied both to offline rendering and realtime rendering - an example of postprocessing of render would be color correcting, or adjusting curves, or even adding a watermark - you didnt rendered it at first pass, you \"added it in postpro\" - you can also fix some minor issues during postpro, if you notice that 48h render have a screw that you forgot to hide, you can erase it in 2d software, and call it \"removed in postpro\".  </p>\n<p>Pixel Per Meter, PPM</p>\n<h2>#Q</h2>\n<p>Quad - a geometric surface created from two triangles sharing one edge - could be named a square, but difference is, square could be made from multiple quads, and if you use term \"quad\", default thinking is \"two triangles\"</p>\n<h2>#R</h2>\n<p>Realtime rendering - term used to describe anything that is shown directly via engine or viewport, without need of \"offline\" pre-rendering/calculating, coloquially anything that dont require waiting for end-result - a game can be realtime, but so does a movie - cutscenes made on game engine are often show in realtime. Changes in your viewport can be also called beign realtime - unless you start pre-rendering parts of your models, like ambienc occlusion or simulating particles. </p>\n<p>Roughness - term defining how \"rough\" a surface is, usually used to describe how well it reflects light 0 rough surface (like concrete) will be worse reflector than smooth surface (glass) - its very simplified example though </p>\n<p>Roughness map - a map that stores roughness information, usually in 8bit space. Either component of RMA / MRA map on dedicated channel, or saved as grayscale, 8bit map with suffix of _RGS</p>\n<h2>#S</h2>\n<p>Smoothgroups</p>\n<p>SSS</p>\n<p>Subdivision Modelling, Sub-d</p>\n<h2>#T</h2>\n<p>Tangent</p>\n<p>Tangent space</p>\n<p>Tiled, tiled texture</p>\n<p>Triangle - simplest 3d  surface you can get in 3d modelling application - three points, three edges, surface with normal between them. From triangles everything in 3d is modelled, so if you see a Quad, its 2 triangles in reality. Same goes for ngons.</p>\n<p>Trim sheet</p>\n<p>Texel</p>\n<p>Texel density</p>\n<h2>#U</h2>\n<p>UV map - a representation of 3d shape \"unfolded\" in 2d space (mind-blown - UV means U and V coordinates, similiar to XY or XYZ (then were talking about UVW map) ) - usefull when you want to paint details on your 3d model - its easier to make a circle on 2 dimensional space instead of 3 dimensional space.</p>\n<p>Unwrapping, unwrap - process of \"unfolding\" a 3d model on 2d space - think about it like reversing an origami or gluedpaper model - you have a box, and you end up with 6 squares on flat surface.</p>\n<h2>#V</h2>\n<p>Vector</p>\n<h2>#W</h2>\n<h2>#X</h2>\n<h2>#Y</h2>\n<h2>#Z</h2>\n<p>Zbrush, Z, zergbrush - 3d Sculpting software that uses clever rendering technique to allow user to work on very very highly detailed surfaces - commonly used by character artists</p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p>Please note that this is 3d-content focused explanation, so some terms could have slightly different meaning in other fields (like banding or dithering). At some point, images with examples will be added under definitions, but it takes lot of time to make certain examples, and i dont want to steal ones from random places over internet.</p>\n<p>I've spent quite a lot time making this list (and updating), so at least try not to steal from it blatantly, and instead of copying everything, link people here. My english is bad enough to be recognisable anyway.</p>\n<pre>This post will be updated along with new terminology I'll be asked about, feel free to ask in comments as well, or folks who are here via discord server / forum, you know where to find me. If youre going to flex about how much you know about 3d big words, at least check if youre not doing it before author of this post</pre>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "quick_3d_tips",
                   "gamedev",
                   "3d"
            ],
            "date_published": "2021-05-26T19:00:31+02:00",
            "date_modified": "2021-12-20T23:36:23+01:00"
        },
        {
            "id": "https://propiro.github.io/portable-triple-screen-station.html",
            "url": "https://propiro.github.io/portable-triple-screen-station.html",
            "title": "Portable, Triple Screen Station",
            "summary": "For quite some time, I've wanted a triple screens but portable. I was overwhelmed with joy few years later, when slide n joy was announced, only for it to turn into scam. Still remembering some military solutions I've got to use at some point of&hellip;",
            "content_html": "<p>For quite some time, I've wanted a triple screens but portable. I was overwhelmed with joy few years later, when slide n joy was announced, only for it to turn into scam. <br>Still remembering some military solutions I've got to use at some point of my work (i think GETAC made them, not sure) I really desired a triple-screen solution to monitor my server gear, or sometimes connect to a workstation that wasn't my home-computer, as i hate working on single screen. After some big brain thinking, and making list of requirements, I've came up with:</p>\n<ul>\n<li>three screens (who would have guessed?)</li>\n<li>at least full HD resolution</li>\n<li>ability to connect video signal through HDMI (normal-sized connection)</li>\n<li>ability to connect to a laptop/pc that DONT have 3 hdmi-out connections (dont have such GPU for example), so can use USB connection</li>\n<li>be either powered through separate power cable or USB connectors</li>\n<li>be foldable with screens facing inside, so they dont break easily</li>\n<li>be confined completely in some kind of case with handle, so its truly portable, not \"mommy mommy please help me move this bunch of wires from this table to another room</li>\n<li>optionally, have keyboard stored inside, so it can be connected and used as poor mans KVM</li>\n<li>optionally, be able to store a tiny pc inside, but thats a long shot</li>\n</ul>\n<p>First thing to do was to obrain screens and the case that would hold everything. Since I dont have problem with <span style=\"text-decoration: line-through;\">alcoholism </span>aliexpress, i've picked these three, as they had the best cost to thickness ratio, and believe or not, theyre apperently IPS screens that display colors quite nicely:<br><br><a href=\"https://pl.aliexpress.com/item/32949964660.html?spm=a2g0s.9042311.0.0.27425c0fZQAAqD\">13.3 FHD IPS portable screen</a> (probably some laptop screens crafty chinamen converted to portable screen, adding a control display board)<br><a href=\"https://pl.aliexpress.com/item/4000677757547.html?spm=a2g0s.9042311.0.0.27425c0fZQAAqD\">Case that looked sturdy, and have dimensions large enough to hide 3 screens and keyboar</a><br><a href=\"https://pl.aliexpress.com/item/4000111647544.html?spm=a2g0s.9042311.0.0.4cbb5c0foKUL3F\">usb -&gt; hdmi \"graphic card\" </a><br><br>and a lot of adapters / converters / sockets were also bought, but you'll see them on the screenshots later.<br>After screens arrived, and suprisingly were not broken / bad quality, I've started thinking about hinges. <br>After watching some people struggle with it, either gluing velcro straps (pinus tech dips who broke the screen in the process) or literal metal hinges (jerry rig something something), I knew it wont do in my case, as I hoped it'll look at least half-proffesional.<br>I've ended designing a 3d hinges that would be screwed into the metal case of the screens. This is the hinge for sidescreen that is closer to centerscreen</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/21/ezgif.com-optimize-1.gif\" alt=\"\" width=\"600\" height=\"371\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/21/ezgif.com-optimize2.gif\" alt=\"\" width=\"600\" height=\"371\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/21/ezgif.com-optimize.gif\" alt=\"\" width=\"600\" height=\"322\"></figure>\n<figure class=\"post__image\">First screen (the closer one) hinges turned out nicely:<br><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/21/unknown.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/21/responsive/unknown-xs.png 300w ,https://propiro.github.io/media/posts/21/responsive/unknown-sm.png 480w ,https://propiro.github.io/media/posts/21/responsive/unknown-md.png 768w\"  alt=\"\" width=\"960\" height=\"1280\"></figure><br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/21/photo5857281639154038124.jpg\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/21/responsive/photo5857281639154038124-xs.jpg 300w ,https://propiro.github.io/media/posts/21/responsive/photo5857281639154038124-sm.jpg 480w ,https://propiro.github.io/media/posts/21/responsive/photo5857281639154038124-md.jpg 768w\"  alt=\"\" width=\"891\" height=\"668\"></figure>\n<figure class=\"post__image\">For right side screen, hinge need to have bigger offset, to compensate distance from center screen:<br><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/21/2020-11-10_00h19_31.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/21/responsive/2020-11-10_00h19_31-xs.png 300w ,https://propiro.github.io/media/posts/21/responsive/2020-11-10_00h19_31-sm.png 480w ,https://propiro.github.io/media/posts/21/responsive/2020-11-10_00h19_31-md.png 768w\"  alt=\"\" width=\"1606\" height=\"885\"></figure><br><br>(As someone might point out, Im using polymodelling software - 3ds max - to author meshes for 3d printing. While I know CAD modelling quite good, I only polymodel it to piss some people on 3d modelling discord server, <em>just because I can</em>)</p>\n<p> </p>\n<p>(this post will be updated later when I push development forward)</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "technology",
                   "other",
                   "DIY"
            ],
            "date_published": "2020-11-10T00:07:52+01:00",
            "date_modified": "2020-11-10T00:24:15+01:00"
        },
        {
            "id": "https://propiro.github.io/getting-best-normalmap-bakes.html",
            "url": "https://propiro.github.io/getting-best-normalmap-bakes.html",
            "title": "Getting best normalmap bakes",
            "summary": "AKA why there are seams on my normalmaps / why there is weird shading on my model tl;dr version for people who cant read: synchronise your smoothgroups and uv islands. for people who arent very good at thinking: uv piece = uv island = uv&hellip;",
            "content_html": "<p><strong>AKA why there are seams on my normalmaps /</strong></p>\n<p><strong> why there is weird shading on my model</strong></p>\n<pre><code>tl;dr version for people who cant read: synchronise your smoothgroups and uv islands.</code><br><br><code>for people who arent very good at thinking: uv piece = uv island = uv chunk, and that means one unwrapped piece of the model. It might be a triangle, it might be a quad, it might be a bunch of triangles and quads - just one continous piece of uv<br><br></code>Normal version for people without adhd that can focus on written guides:</pre>\n<p>One of most common technique in gameart is baking highpoly models to lowpoly models, to get nice rounded corners, that fake the overall low-amount of triangles our ingame-model have.</p>\n<p>What most beginners (but not only) have problems, are normalmaps - beign highly technical map, that many people dont know what represent, except \"they're kinda blueish\" - most baking errors are visible on them, even or perfectly modelled lowpoly and highpoly models, and their quality dictate how our model will look after we texture it.</p>\n<p>To get rid of seams and bad shading, we need to make sure our model have synchronised uv islands with smoothgroups (hard edges for maya users), and enough padding between uv chunks. But what does it mean?</p>\n<p>Look at this:</p>\n<figure class=\"post__image post__image\" ><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/20/2020-11-07_13h34_21.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h34_21-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h34_21-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h34_21-md.png 768w\"  alt=\"Model Smoothing\" width=\"1157\" height=\"1349\">\n<figcaption >1st is weird, 2nd is plain bad, 3rd is what you want</figcaption>\n</figure>\n<p>While no smoothgroups is somewhat a default state you can start with the lowpoly, you want them to be set up correctly. For some weird reason, people try to bake models on 1 smoothgroups, which is (especially for hardsurface models, but there might be case its right thing to do - for example baking a sphere ( ͡° ͜ʖ ͡°) ) wrong, and at first glance gives out very bad results, both before baking and baked. Thats why you want smoothgroups to be set up correctly, so the model shades nicely, and then make UV islands based on the smoothing, to preserve all corners/seams:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/20/2020-11-07_13h35_26.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_26-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_26-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_26-md.png 768w\"  alt=\"UV Seams\" width=\"1684\" height=\"979\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/20/2020-11-07_13h35_37.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_37-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_37-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_37-md.png 768w\"  alt=\"and smoothgroups\" width=\"1684\" height=\"979\"></figure>\n<p> That solves 90% of issues with normalmap. Another thing to look for is padding between uv chunks:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/20/2020-11-07_13h26_25.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h26_25-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h26_25-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h26_25-md.png 768w\"  alt=\"no padding\" width=\"1590\" height=\"1570\"></figure>\n<p>While it might look correct, and tightly packed, its not actually great - we used UV space to the limit, but during baking and texturing we'll experience bleeding from near uv pieces - that means colors from one piece might be visible on other piece. Also can cause problems during mip-mapping.</p>\n<p>This is what we want:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/20/2020-11-07_13h33_14.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h33_14-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h33_14-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h33_14-md.png 768w\"  alt=\"\" width=\"1586\" height=\"1588\"></figure>\n<p>We traded off some UV space (texel density of texture) for a lot of padding between uv pieces - this will not only bake correctly, but as well prevent from color bleeding on original resolution and mipmapped resolution.</p>\n<p>Here is comparison of meshes with combination of padding/no padding as well smoothgroups set up / not set up / one smoothgroup. CAN YOU GUESS WHICH ONE IS CORRECT?</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/20/composite_presentation.jpg\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/20/responsive/composite_presentation-xs.jpg 300w ,https://propiro.github.io/media/posts/20/responsive/composite_presentation-sm.jpg 480w ,https://propiro.github.io/media/posts/20/responsive/composite_presentation-md.jpg 768w\"  alt=\"\" width=\"3222\" height=\"2884\"></figure>\n<p class=\"align-center\">(download high resolution image at the bottom of this post)</p>\n<p>You can view fully textured asset that uses this mesh, made using described technique here:</p>\n<p><a href=\"https://www.artstation.com/artwork/xJqGX1\">https://www.artstation.com/artwork/xJqGX1</a></p>\n<p>You can high resolution images, as well files used for baking here:</p>\n<p><a href=\"https://mega.nz/file/MEkwzYJA#thvvOcMq8Xwc_R60Fq5oHQSg1m9ch9_UBUr7jhCtPQI\">renders</a> - <a href=\"https://mega.nz/file/hR1kRCRa#lUdtB2xhPAO7aKY6fB-oqnwJkxe3a9p153jCJzrdb1I\">normalmaps</a> - <a href=\"https://mega.nz/file/FBsS1QQB#5JsZkdMHRzLP5QrjPBDNBUDFGb0IphuHxjAds800XQM\">meshes</a> - <a href=\"https://mega.nz/file/MA9QzaqZ#Zgr4fofIMICeKqvrvoLTZ2q6qYI93Zrze3CZVVPoZiE\">comparison</a> - <a href=\"https://mega.nz/file/kYt0TIBI#vGXjt9KS5sO4SmVa8YGud14Qj72oolaTIEuyO0diOUA\">marmoset bake scene</a></p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "techart",
                   "quick_3d_tips",
                   "3d"
            ],
            "date_published": "2020-11-07T16:35:33+01:00",
            "date_modified": "2021-06-08T19:30:38+02:00"
        },
        {
            "id": "https://propiro.github.io/understanding-the-value-of-your-own-time.html",
            "url": "https://propiro.github.io/understanding-the-value-of-your-own-time.html",
            "title": "Understanding the value of your own time.",
            "summary": "AKA - how much should I ask for doing XYZ? First thing I want to say: If youre good at something, never do it for free -If you do it for free, youre an exploitable idiot, and youre not only hurting yourself, but the industry&hellip;",
            "content_html": "<p>AKA - how much should I ask for doing XYZ?</p>\n<p>First thing I want to say: If youre good at something, never do it for free -If you do it for free, youre an exploitable idiot, and youre not only hurting yourself, but the industry itself. Im not talking about free modding or community projects - I'm talking about getting exploited for \"exposure\" or \"future business ventures\", \"royalties\" etc. Just don't,.</p>\n<p>There are two ways I can answer that, short and long.</p>\n<p>Short answer:</p>\n<p><strong>TIME YOU SPENT DOING THE WORK x HOW MUCH YOU CHARGE PER HOUR</strong></p>\n<p><em>(Client dont always need to know how long it'll take you, sometimes they dont care - it all depends on the job really, but you should always know these two values - how long and how much)</em></p>\n<p>Thats it, easy. However, it works when you remotely know how expensive life is, but if you've been linked this post, most of you probably don't, or don't know what to include in expenses when freelancing, so here comes the long answer:</p>\n<p><strong>TIME SPENT DOING THE WORK</strong> x <strong>(Hourly rate + financial buffor + equipment cost/wear buffor + software + power cost/internet cost + taxes + additional factors)</strong></p>\n<p>Let me describe what means what:</p>\n<p><strong>Time spent doing the work</strong> - you need to know how long you'll work on the asset - 5 hours? 50 hours? If you agree to make a gun model, because OH WOW ITS REMOTE WORK I LOVE DOIN 3D AND SOMEONE WILL PAY FOR IT! - I understand, its cool, we've been there. However, if you agree to make a gun model for 200usd, and it'll take you 80 hours (and remember there might be additional feedback / issues at the end, more about it later), Its suddenly 200usd divided by 80 hours of your time, which equals to nice... 2,5 USD per hour. Depending where you live, you might get more working at McDonalds, so the choice is yours. This is the reasons you see professionals charging up people for thousands of dollars for one AAA model - not because they're assholes, but because work takes time, and time is everything. You have 24hours in a day, I have 24hours in a day, so does the client.</p>\n<p> <strong>Hourly rate</strong> - hardest thing to estimate here, because it depends on how niche the thing youre doing is, how large is the competition in area youre working now, and how much people of your skill level are out there. It is not rare to see Juniors working for 15usd/h remotely, middle artists for 15-30usd/h, and seniors for 30+ (Personally I know people who charge 120usd per hour of their time - it seems a lot, but like with everything - there is a catch). This is the value you'd want to earn working in a studio, or on-site work.</p>\n<p><strong>Financial buffor </strong>- this is where extra stuff starts. Ok, you have a self-employment company, or just remote working for some client on a contract-based work (it strongly depends on the country you work IN and FOR, its your responsibility to check all the formalities) - if you're lucky, you have constant flow of work, 40,50,60hours per week, paid on hourly basis - and thats great. However, there is always possiblity, that the work will go dry, there will be one month pause between projects - what then? Exactly, your financial buffor. Depending how expensive your area is, its good to have SOME savings, for me its usually calculated in a way that for working 3 months, I can live 1 month without work (so spending 3 hours of work, you charge like for 4 hours). And try to save up this money, don't spent it on videogames,whores or whisky. At least try not to. </p>\n<p><strong>Equipment cost/wear</strong> - if you're young, and do work on a computer you have from the college times, and always had one, then its probably weird for you, but if your source income is actual freelancing/contract work, its VERY IMPORTANT to be able to do the work. The more complex work you do, the more powerfull machine you need. Now imagine you just got a contract with 2 week deadline for a model, and on second day your PC dies. You waste time for debugging what happened, waste time for looking for parts, waste time waiting for parts to arrive, wasting time recovering the work you had opened (you have backups in case harddrive fails, right? :-) ). And  thats if you have money for new hardware. If you don't, youre screwed - sometimes a cheap laptop CAN DO JUST ENOUGH, but with more complex tasks, its mandatory to have a higher perfomance hardware. After 15 years in the field, I have ready-to-use secondary workstation that have almost identical parameters as my main one, + few server rackable computers with backups / rendering possibilities. In big corporate world its called hardware resource scaling, and after some time, its good to have money to do it as well.</p>\n<p><strong>Software - </strong>if you pirate your software, we wont be friends. And youre probably limiting yourself to clients who pay less than a fast-food joint, so its your loss as well. Software costs a lot. Now its hidden under \"subscription\" pricing model, but after a year or two, you start losing money on it. Its just 100usd monthly, but normal licence cost 3000 usd, so after 3 years, youre paying extra. But have updates, thats a trade-off. Most of my game-dev work CAN and IS done on... 3d Studio max 2012. Why? Because I have lifetime licence for it, costed me around 2000USD. Its 2020, and 3ds max cost 300usd/mo in my country, co after 7 months, i'd start paying extra, for rest of the 8 years. HOWEVER - I'm drifting off here, just wanted to show the alternatives - software (unless blender) costs as well, and if you work on game models, you probably want at least 3d modelling package + texturing package. So keep it in mind that you need to incorporate the cost into hour price as well (assuming you work 200h/monthly, you can add 2usd to hourly rate, and you'll have 400usd for software - not counting initial windows licence cost, it should be enough for monthly subscriptions + a plugin or two monthly.</p>\n<p><strong>Power cost/internet cost - </strong>Thats the funny one, because its often ignored. Unless you work just on models and textures, on a laptop (You should get workstation though), it won't affect you much. However, if you do renders / simulations / CUDA calculations, it might affect your monthly bills a lot - I had contract where I had to render multiple versions of lightmaps for unity game, and it turned out in 20 days I've used 1200% more energy that I've used previous month in total. And I needed to pay for every kilowatt spent anyway. With internet it really depends on the work you do - if you work on movies/raws, there is a lot of data to be transferred SOMEWHERE, and you don't want to miss deadlines, because you had 60kbps transfer to clients server - thats why a good connection (not only in download speeds, but upload speeds) is a must. Or two of them. I have 1 connection to my home + one backup LTE router if it fails, but I plan on getting second wired one, as projects sometimes hits 100GBs of data that need to be transferred.</p>\n<p><strong>Taxes - </strong>welcome to the adult world. Everything you earn, is taxed. Depending on your country, it can be 9,5%, it can be 22%, it can be 39% - we wont discuss how fair or not it is, but you better pay these taxes, or IRS (or local equivalent of it) at some point will make your life hell. Dont worry, clients (if its a company, not some backward savage garage-based venture) know that, and if they don't employ you on normal contract, but outsource work, don't pay the expenses, and should be ready for you charging more than on-sire normal employment. If freelancing is your way of living, I strongly suggest hiring an accountant as I do, to take care about all the taxation purgatory.</p>\n<p>Which brings me to last point:</p>\n<p> <strong>Additional factors -</strong> just like that accountant I've mentioned before, there is a lot of things related to your work, that cost money. Im not talking about rent or food, but things like office costs, cabs, alcohol, website domain/server if you have business website, some small marketing even. New plugins, tutorials, resources - if you can pay 5 dollars for a pack of decals you'd spent 4 days making, just buy the decals. It'll depend strongly on where you are at the career path.</p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "quick_3d_tips",
                   "gamedev",
                   "3d"
            ],
            "date_published": "2020-05-30T17:43:12+02:00",
            "date_modified": "2020-07-18T13:43:20+02:00"
        },
        {
            "id": "https://propiro.github.io/macroscript-open-max-file-location-in-explorer.html",
            "url": "https://propiro.github.io/macroscript-open-max-file-location-in-explorer.html",
            "title": "MACROSCRIPT: open max file location in explorer",
            "summary": "Very short one, written literally 5 minutes ago. Execute below maxscript to create macroscript in Customise User Interface menu, and use it to quickly open folder where the max scene is saved: macroScript OpenMaxFileLocation category:\"_Piro_Tools\" tooltip:\"open max location\" ( command = \"explorer\" commandArg = maxFilePatch&hellip;",
            "content_html": "<p>Very short one, written literally 5 minutes ago. Execute below maxscript to create macroscript in Customise User Interface menu, and use it to quickly open folder where the max scene is saved:</p>\n<p><code><br>macroScript OpenMaxFileLocation<br> category:\"_Piro_Tools\"<br> tooltip:\"open max location\" <br>(<br>command = \"explorer\"<br>commandArg = maxFilePatch<br>shellLaunch command maxFilePath<br>)</code></p>\n<p>You'll find it here, as usuall:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/18/2020-02-04_14h53_29.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://propiro.github.io/media/posts/18/responsive/2020-02-04_14h53_29-xs.png 300w ,https://propiro.github.io/media/posts/18/responsive/2020-02-04_14h53_29-sm.png 480w ,https://propiro.github.io/media/posts/18/responsive/2020-02-04_14h53_29-md.png 768w\"  alt=\"\" width=\"755\" height=\"797\"></figure>\n<p>I've found myself switching through four 3dsmax instances with various projects, copying files between them - I open max scenes from recent menu often, not browse it manually through all the project repositories I have, and this turned out to be quite handy.</p>\n<p> </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "techart",
                   "quick_3d_tips",
                   "maxscript",
                   "3d"
            ],
            "date_published": "2020-02-04T14:59:55+01:00",
            "date_modified": "2020-02-04T14:59:55+01:00"
        },
        {
            "id": "https://propiro.github.io/dualscreen-for-now-thinkpad-prototype.html",
            "url": "https://propiro.github.io/dualscreen-for-now-thinkpad-prototype.html",
            "title": "Dualscreen (for now) Thinkpad prototype",
            "summary": "Hello, For quite a long time i wanted a dualscreen laptop. While im aware of existence of few constructions, they're either old or super-expensive - and i like my thinkpad due to its... expendability. Since i've aquired a resin printer, i've decided to try and&hellip;",
            "content_html": "<p>Hello,</p>\n<p>For quite a long time i wanted a dualscreen laptop. While im aware of existence of few constructions, they're either old or super-expensive - and i like my thinkpad due to its... expendability.</p>\n<p>Since i've aquired a resin printer, i've decided to try and make one on the cheap, and after a sleepless nigt, a prototype model was made:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/17/ezgif-3-e57c1cf05620.gif\" alt=\"\" width=\"600\" height=\"501\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://propiro.github.io/media/posts/17/ezgif-3-ec0c720ba786.gif\" alt=\"\" width=\"600\" height=\"501\"></figure>\n<p> </p>\n<p>and printed prototype can be seen here, mounted to... deasembled upper part of another thinkpad frame, housing an FHD screen matrix:</p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"1\">\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/17/gallery/2020-01-10_13h59_49.png\" data-size=\"652x856\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/17/gallery/2020-01-10_13h59_49-thumbnail.png\" alt=\"\" width=\"652\" height=\"856\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/17/gallery/2020-01-10_13h59_56.png\" data-size=\"634x341\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/17/gallery/2020-01-10_13h59_56-thumbnail.png\" alt=\"\" width=\"634\" height=\"341\"></a></figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/17/gallery/2020-01-10_14h00_03.png\" data-size=\"617x823\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/17/gallery/2020-01-10_14h00_03-thumbnail.png\" alt=\"\" width=\"617\" height=\"823\"></a></figure>\n</div></div>\n<p>Controller is salvaged from broken USB FHD screen, still need to figure out how to guide cables in not annoying way, as well remove the hinges from top screen and print some covers/caps for the hole that'll be there. And of course replace the zip-ties with metal pins, I have a special bearings ordered already (so its not metal and resing connection that'll worn off quickly), just waiting for everything to be sent.</p>\n<p>HEY, ITS SOMETHING!</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "thinkpad",
                   "other",
                   "hacks"
            ],
            "date_published": "2020-01-10T14:18:55+01:00",
            "date_modified": "2020-01-10T14:18:55+01:00"
        },
        {
            "id": "https://propiro.github.io/pi-zero-inside-multibay-part-2-i-dont-even.html",
            "url": "https://propiro.github.io/pi-zero-inside-multibay-part-2-i-dont-even.html",
            "title": "Pi zero inside Multibay, part 2: I dont even.",
            "summary": "If you follow for some reason my posts, i've been struggling with getting juice out of SATA slimline connector to power raspberry pi, that was to be put inside Thinkpads ultrabay. And I've made it work. And realised I've lost ultrabay space. In addition, fooling&hellip;",
            "content_html": "<p>If you follow for some reason my<a href=\"https://propiro.github.io/getting-juice-out-of-laptop-satamsata-connector-to-power-up-things.html\"> posts</a>, i've been struggling with <a href=\"https://propiro.github.io/getting-juice-out-of-laptop-satamsata-connector-to-power-up-things.html\">getting juice out of SATA slimline connector</a> to power raspberry pi, that was to be put inside Thinkpads ultrabay.</p>\n<p>And I've made it work.</p>\n<p>And realised I've lost ultrabay space. In addition, fooling the ultrabay connector that SOMETHING is connected to id made my thinkpad beep at start with warning that it cannot detect the drive.</p>\n<p>So, naturally, I've decided NOT to allow any compromises, because they're sign of weakness, and have both things alltogether.</p>\n<p>DID YOU KNOW SATA DRIVES DONT NEED TO TAKE ALL THE SPACE IN 2.5 ENCLOSURE?</p>\n<p>Some shots of work in progress: </p>\n<div class=\"gallery-wrapper\"><div class=\"gallery\"  data-is-empty=\"false\" data-columns=\"3\">\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_03.png\" data-size=\"615x823\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_03-thumbnail.png\" alt=\"\" width=\"615\" height=\"823\"></a>\n<figcaption class=\"gallery-description\">Power lines soldered to ssd pcb, this was most intrusive point where something could go wrong.</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_16.png\" data-size=\"613x824\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_16-thumbnail.png\" alt=\"\" width=\"613\" height=\"824\"></a>\n<figcaption class=\"gallery-description\">Cables secured with tape.</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_26.png\" data-size=\"611x821\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_26-thumbnail.png\" alt=\"\" width=\"611\" height=\"821\"></a>\n<figcaption class=\"gallery-description\">SSD Pcb overlayed on top of PI Zero PCB, cables soldered, not arranged.</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_36.png\" data-size=\"613x822\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_36-thumbnail.png\" alt=\"\" width=\"613\" height=\"822\"></a>\n<figcaption class=\"gallery-description\">Added DIP-switch to have some control when I want it On or OFF, in case i want to safe on battery.</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_48.png\" data-size=\"617x821\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_48-thumbnail.png\" alt=\"\" width=\"617\" height=\"821\"></a>\n<figcaption class=\"gallery-description\">The whole DIP switch wasnt neccessary, but i wanted to troll people showing them this image and telling them it overclocks the drive.</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_58.png\" data-size=\"610x822\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h56_58-thumbnail.png\" alt=\"\" width=\"610\" height=\"822\"></a>\n<figcaption class=\"gallery-description\">Looks cool, all ports accessible, there is plenty of space for small accessories in ultrabay to connect (like external receivers / pendrives)</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h57_10.png\" data-size=\"610x817\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h57_10-thumbnail.png\" alt=\"\" width=\"610\" height=\"817\"></a>\n<figcaption class=\"gallery-description\">Different shot</figcaption>\n</figure>\n<figure class=\"gallery__item\"><a href=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h57_18.png\" data-size=\"1268x615\"><img loading=\"lazy\" src=\"https://propiro.github.io/media/posts/16/gallery/2019-12-18_11h57_18-thumbnail.png\" alt=\"\" width=\"768\" height=\"372\"></a>\n<figcaption class=\"gallery-description\">Mounted in ultrabay, unless someone eject it from laptop, there is no change of guessing there is computer inside computer.</figcaption>\n</figure>\n</div></div>\n<p>Things i'll add to it, because its not pointless enough:</p>\n<p>Small accumulator to make it run for several minutes between restarts of laptop.</p>\n<p>OLED screen to display (outside of the thinkpad bay, will require some dremel work) IP adress and uptime/network usage</p>\n<p>WIRED two-way of communication between thinkpad (i use windows on my laptops) and pi zero, probably will require adding some internal cables with USB lines. So it could act as an another usb drive OR input device controlled from... anything that can SSH into it.</p>\n<p>At some point of making this mod, someone asked me why. I've never asked this myself, at some point I just wanted to do it to be sure I can.</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "thinkpad",
                   "other",
                   "hacks"
            ],
            "date_published": "2019-12-18T12:07:48+01:00",
            "date_modified": "2019-12-21T22:39:55+01:00"
        },
        {
            "id": "https://propiro.github.io/ok-boomer-3d-workflow-it-works.html",
            "url": "https://propiro.github.io/ok-boomer-3d-workflow-it-works.html",
            "title": "OK BOOMER 3D Workflow, it works.",
            "summary": "Several people asked me about my workflow, so I've decided to put it here for easy of access. This is translation of one of 2010-something post i've made on max3d.pl, with additions to workflow with techniques / tools that are more recent. My current modelling&hellip;",
            "content_html": "Several people asked me about my workflow, so I've decided to put it here for easy of access. This is translation of one of 2010-something post i've made on max3d.pl, with additions to workflow with techniques / tools that are more recent.<br><br>My current modelling workflow include softwares:<br><br><a href=\"https://www.pureref.com/\">pureref </a>- working with references<br><a href=\"https://www.autodesk.pl/products/3ds-max/overview\">3ds max</a> - base /lp/hp modelling - get <a href=\"http://renderhjs.net/textools/3dsMax.html\">textools</a> maxscript for it and install.<br><a href=\"https://www.autodesk.pl/products/3ds-max/overview\">uv layout</a> - tight unwraps<br><a href=\"https://marmoset.co/toolbag/\">marmoset</a> - baking<br><br><br><br>You can make most of these things just in 3ds max like I did in the dinosaur times, and I'll write up when you can use alternatives, but this post will be focused on using above packages.<br><br>My lowpoly (LP from now on) models are created 100% in 3D studio max, version 2012 that I've bought licence for many sheckels, or 2017, that one of my favorite clients generously bought for me. Most of my custom tools that help me speed up my workflow are in 2012 though, and i dont use any particular features that are NOT in 2012 that'd force me to use newer version. Why I'm not upgrading? Because subscription model, at least by the time of writing this post, is quite expensive, and after 3 years I'd spent same money I've spent on 2012, and its almost 2020, so I'd lose triple amount of money. Anyway.<br>Assuming you have all the refs you need and few more, start modelling:<br>Blockout phase, LP phase are done in 3DS Max. Blockout phase, sometimes called \"basemesh\" phase when it's quite dense, but doesnt have clean topology, I'm trying to keep it in quads anyway for easier of work later. Looptool/Swift loop is your friend, when you'll be making edges around the borders to protect them when you sub-d later.<br><br>Having a basemesh that have well defined details that I'd see on LP geometry, and have a proportions that match the references / desired model, I'm making a copy of it and start working on high poly (HP from now). I use sub-d modelling exclusively, nowadays workflows like to include zbrush/dynamesh/proboolean workflow, its ok when the time is tight and you need to quickly have some results. However, it teaches practically nothing about controlling topology and flow of the geometry, so a good practice is to use sub-d whenever you can, and only half-ass meshes in zbrush when youre in a hurry and client dont care.<br><br>Ok, now that half of the people got offended and stopped reading, the HP I end up with have all the details on geometry, with the exceptions like diamond patterns on grips or fabric weave that can be easily made on texture itself. I do model sometimes braided cables / more complex diamond patterns when the surface they're on is curved, but its usually pain.<br><br>With HP done, I go back to my basemesh, that now should overlap with the finished high poly pretty tight. Duplicating it, this will be my low-poly mesh. Im deleting uneccessary edges / division, making the basemesh truly lowpoly, yet detailed enough to bake properly (rules for certain types of objects still apply - where to put denser geo, what chamfer and what not, depending on where the camera looks, et cetera). Now the magical part that streamlines unwrapping by 80% of time. I set up automatic smoothgroups by 33-45degrees, having most if not all hard edges well defined on low poly, The i apply unwrap UVW modifier, and use one nifty function - uv chunks by smoothgroups, that creates uv islands based off your smoothgroups. Only thing you need to manually cut are cylinders, that need to be cut on one edge to unwrap properly. After all the pieces are done, I use quick peel, relax, and have quite good, relaxed UVs. <br><br><em>The poor mans UV version, using 3ds max:</em><br><em>Ok, now you'll need some automation, unless you want/need to do tis by hand. Get a copy of textools, and on previously prepared uv pieces run \"Sort\" (to get all the UV pieces alignes to one of axes, this is important step) and then \"Pack\" or whatever it is called. Remember to:</em><br><em>- turn off any snapping in 3ds max, or you'll end up with weirdly rotated pieces instead of nicely arranged, vertically/horisontally oriented UVs </em><br><em>- have some padding options, you dont want to have zero-pixel distances between the uv islands, it'll cause bleeding and baking issues later.</em><br><br>This is less efficient way and gives a rather random result, but if you'll be using painter to texture it, it doesnt matter that much how logically arranged the UVs are, as you';; be using viewport to texture it anyway.<br><br>Normal UV version, using UV layout:<br>I scale UVs in max, depending on their importance (back/bottom faces are smaller, sights are larger, etc). Such prepared model is going to UV layout (strongly advice getting the \"UV layour bridge\" script for super-fast work between max and UV layout)<br>In uv layout, I make few boxes around parts of certain areas, not beign very precise about it - usually for weapon I like having sights and magazine / ammo somewhere in one part of the texture, rest is scattered around 0-1 UV space.<br>Then, UV layout settings:<br>After aligning the pieces to one of the axes:<br>4k map,quality: best, bleed (padding) 12PX, 10-12MINS, no rotation, show shell bleeds, show tile coverage (very usefull for dick comparing later that you've utilised the UV better than rest of the people), Allow box overlaps, shrink boxes to fit. Rest by default, usually 1 or off.<br>Click pack, go make a coffe, return 10 minutes later, and enjoy having model packed more tightly than you'd ever managed to pack by hand. Or click again and test results, its up to you. For more complex morels, 15 minutes of UV layout work could save me up to 10hours of packing. <br>After everything, click \"send\" if you're using UV bridge, or save the mapped obj and get it back to max.<br><br>When you have the model back in max, run on it a textool function \"Smoothing groups from UV chunks\" - this is to endure that my smoothgroups are still synced with uv islands. Now, into the baking.<br><br><em>The poor mans baking version, using 3ds max:</em><br><em>Note that you wont be getting all the nice maps that substance painter uses, thats the main reason i've started using marmoset baker.</em><br><em>Contrary to popular belief, you can get good normalmaps from 3ds max, it just require some more knowledge and work, that most people dont have or want to pursue. Anyway:</em><br><em>On your lowpoly model, apply \"Turn to poly\" modifier, and limit the edges to 3. This will make your model triangulated, without making any permanent modifications to it. Some edges might be incorrectly placed after that, fix it on edit_poly modifier using \"turn\" option for faces edges.</em><br><em>Apply Projection modifier on top of it, add your HP meshes, reset cage to average all verticles of it, and offset it. Spend some time manually tweaking it (shouldnt take more than 5 minutes) next step.</em><br><em>Render to texture dialog, an old friend for old people. Bake normalmaps there with double the final resolution, to fight crappy filtering (if you start playing with filtering/aa options in render settings, it'll render longer than just double size, so do yourself a favor and save time). You should be able to bake normalmap, AO and colormap ID. Cavity map can be extracted from normalmap in photoshop using xnormal plugin. Note that sometimes you'll need to explode the model to avoig crappy overlaps from misshits of rays. Textools might help you get some additional maps.</em><br><br>Normal baking version, using marmoset toolbag.<br>Very streamlined: click on bread icon, become breadmaster.<br>Export your hp model with some iterations on sub-d (2 is usually enough, 3 if you started with super-lowpoly mesh for sub-d) - this is good moment to apply some colors to HP parts, that will be baked into material ID map, export your lp model.<br>Put highpoly meshes into HIGH group, lowpoly mesh to LOW group, Name the baked maps, tweak skew, tweak offset, select maps you need (for painter you'd want everything, especially thisckness / cavity that you wont get from max. <br>Bake it at 2x desired resolution, shrink them afterward using some sharp interpolation alghoritm.<br><br>And thats it, you have baked mesh. Most of things mentioned here are pretty straightforward, but people still ask about certain steps of creating models, so.<br>",
            "author": {
                "name": "piro"
            },
            "tags": [
                   "quick_3d_tips",
                   "general_rant",
                   "3d"
            ],
            "date_published": "2019-12-18T11:29:32+01:00",
            "date_modified": "2019-12-18T11:42:25+01:00"
        }
    ]
}
