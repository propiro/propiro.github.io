{
    "version": "https://jsonfeed.org/version/1",
    "title": "propiro.github.io",
    "description": "",
    "home_page_url": "https://propiro.github.io",
    "feed_url": "https://propiro.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "piro"
    },
    "items": [
        {
            "id": "https://propiro.github.io/ok-boomer-3d-workflow-it-works.html",
            "url": "https://propiro.github.io/ok-boomer-3d-workflow-it-works.html",
            "title": "OK BOOMER 3D Workflow, it works.",
            "summary": "Several people asked me about my workflow, so I've decided to put it here for easy of access. This is translation of one of 2010-something post i've made on max3d.pl, with additions to workflow with techniques / tools that are more recent. My current modelling&hellip;",
            "content_html": "Several people asked me about my workflow, so I've decided to put it here for easy of access. This is translation of one of 2010-something post i've made on max3d.pl, with additions to workflow with techniques / tools that are more recent.<br><br>My current modelling workflow include softwares:<br><br><a href=\"https://www.pureref.com/\">pureref </a>- working with references<br><a href=\"https://www.autodesk.pl/products/3ds-max/overview\">3ds max</a> - base /lp/hp modelling - get <a href=\"http://renderhjs.net/textools/3dsMax.html\">textools</a> maxscript for it and install.<br><a href=\"https://www.autodesk.pl/products/3ds-max/overview\">uv layout</a> - tight unwraps<br><a href=\"https://marmoset.co/toolbag/\">marmoset</a> - baking<br><br><br><br>You can make most of these things just in 3ds max like I did in the dinosaur times, and I'll write up when you can use alternatives, but this post will be focused on using above packages.<br><br>My lowpoly (LP from now on) models are created 100% in 3D studio max, version 2012 that I've bought licence for many sheckels, or 2017, that one of my favorite clients generously bought for me. Most of my custom tools that help me speed up my workflow are in 2012 though, and i dont use any particular features that are NOT in 2012 that'd force me to use newer version. Why I'm not upgrading? Because subscription model, at least by the time of writing this post, is quite expensive, and after 3 years I'd spent same money I've spent on 2012, and its almost 2020, so I'd lose triple amount of money. Anyway.<br>Assuming you have all the refs you need and few more, start modelling:<br>Blockout phase, LP phase are done in 3DS Max. Blockout phase, sometimes called \"basemesh\" phase when it's quite dense, but doesnt have clean topology, I'm trying to keep it in quads anyway for easier of work later. Looptool/Swift loop is your friend, when you'll be making edges around the borders to protect them when you sub-d later.<br><br>Having a basemesh that have well defined details that I'd see on LP geometry, and have a proportions that match the references / desired model, I'm making a copy of it and start working on high poly (HP from now). I use sub-d modelling exclusively, nowadays workflows like to include zbrush/dynamesh/proboolean workflow, its ok when the time is tight and you need to quickly have some results. However, it teaches practically nothing about controlling topology and flow of the geometry, so a good practice is to use sub-d whenever you can, and only half-ass meshes in zbrush when youre in a hurry and client dont care.<br><br>Ok, now that half of the people got offended and stopped reading, the HP I end up with have all the details on geometry, with the exceptions like diamond patterns on grips or fabric weave that can be easily made on texture itself. I do model sometimes braided cables / more complex diamond patterns when the surface they're on is curved, but its usually pain.<br><br>With HP done, I go back to my basemesh, that now should overlap with the finished high poly pretty tight. Duplicating it, this will be my low-poly mesh. Im deleting uneccessary edges / division, making the basemesh truly lowpoly, yet detailed enough to bake properly (rules for certain types of objects still apply - where to put denser geo, what chamfer and what not, depending on where the camera looks, et cetera). Now the magical part that streamlines unwrapping by 80% of time. I set up automatic smoothgroups by 33-45degrees, having most if not all hard edges well defined on low poly, The i apply unwrap UVW modifier, and use one nifty function - uv chunks by smoothgroups, that creates uv islands based off your smoothgroups. Only thing you need to manually cut are cylinders, that need to be cut on one edge to unwrap properly. After all the pieces are done, I use quick peel, relax, and have quite good, relaxed UVs. <br><br>The poor mans UV version, using 3ds max:<br>Ok, now you'll need some automation, unless you want/need to do tis by hand. Get a copy of textools, and on previously prepared uv pieces run \"Sort\" (to get all the UV pieces alignes to one of axes, this is important step) and then \"Pack\" or whatever it is called. Remember to:<br>- turn off any snapping in 3ds max, or you'll end up with weirdly rotated pieces instead of nicely arranged, vertically/horisontally oriented UVs <br>- have some padding options, you dont want to have zero-pixel distances between the uv islands, it'll cause bleeding and baking issues later.<br><br>This is less efficient way and gives a rather random result, but if you'll be using painter to texture it, it doesnt matter that much how logically arranged the UVs are, as you';; be using viewport to texture it anyway.<br><br>Normal UV version, using UV layout:<br>I scale UVs in max, depending on their importance (back/bottom faces are smaller, sights are larger, etc). Such prepared model is going to UV layout (strongly advice getting the \"UV layour bridge\" script for super-fast work between max and UV layout)<br>In uv layout, I make few boxes around parts of certain areas, not beign very precise about it - usually for weapon I like having sights and magazine / ammo somewhere in one part of the texture, rest is scattered around 0-1 UV space.<br>Then, UV layout settings:<br>After aligning the pieces to one of the axes:<br>4k map,quality: best, bleed (padding) 12PX, 10-12MINS, no rotation, show shell bleeds, show tile coverage (very usefull for dick comparing later that you've utilised the UV better than rest of the people), Allow box overlaps, shrink boxes to fit. Rest by default, usually 1 or off.<br>Click pack, go make a coffe, return 10 minutes later, and enjoy having model packed more tightly than you'd ever managed to pack by hand. Or click again and test results, its up to you. For more complex morels, 15 minutes of UV layout work could save me up to 10hours of packing. <br>After everything, click \"send\" if you're using UV bridge, or save the mapped obj and get it back to max.<br><br>When you have the model back in max, run on it a textool function \"Smoothing groups from UV chunks\" - this is to endure that my smoothgroups are still synced with uv islands. Now, into the baking.<br><br>The poor mans baking version, using 3ds max:<br>Note that you wont be getting all the nice maps that substance painter uses, thats the main reason i've started using marmoset baker.<br>Contrary to popular belief, you can get good normalmaps from 3ds max, it just require some more knowledge and work, that most people dont have or want to pursue. Anyway:<br>On your lowpoly model, apply \"Turn to poly\" modifier, and limit the edges to 3. This will make your model triangulated, without making any permanent modifications to it. Some edges might be incorrectly placed after that, fix it on edit_poly modifier using \"turn\" option for faces edges.<br>Apply Projection modifier on top of it, add your HP meshes, reset cage to average all verticles of it, and offset it. Spend some time manually tweaking it (shouldnt take more than 5 minutes) next step.<br>Render to texture dialog, an old friend for old people. Bake normalmaps there with double the final resolution, to fight crappy filtering (if you start playing with filtering/aa options in render settings, it'll render longer than just double size, so do yourself a favor and save time). You should be able to bake normalmap, AO and colormap ID. Cavity map can be extracted from normalmap in photoshop using xnormal plugin. Note that sometimes you'll need to explode the model to avoig crappy overlaps from misshits of rays. Textools might help you get some additional maps.<br><br>Normal baking version, using marmoset toolbag.<br>Very streamlined: click on bread icon, become breadmaster.<br>Export your hp model with some iterations on sub-d (2 is usually enough, 3 if you started with super-lowpoly mesh for sub-d) - this is good moment to apply some colors to HP parts, that will be baked into material ID map, export your lp model.<br>Put highpoly meshes into HIGH group, lowpoly mesh to LOW group, Name the baked maps, tweak skew, tweak offset, select maps you need (for painter you'd want everything, especially thisckness / cavity that you wont get from max. <br>Bake it at 2x desired resolution, shrink them afterward using some sharp interpolation alghoritm.<br><br>And thats it, you have baked mesh. Most of things mentioned here are pretty straightforward, but people still ask about certain steps of creating models, so.<br><br><br><br><br>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-12-18T11:29:32+01:00",
            "date_modified": "2019-12-18T11:29:32+01:00"
        },
        {
            "id": "https://propiro.github.io/proper-way-to-learn-3d.html",
            "url": "https://propiro.github.io/proper-way-to-learn-3d.html",
            "title": "Proper way to learn 3D.",
            "summary": "So, you just finished a grenade tutorial, ak tutorial, pistol or knife one. You have zero experience in 3d modelling, but by extensive handholding you managed to finish it, clicking exactly what tutor clicked and doing exactly tutor in the movie did. You learned nothing.",
            "content_html": "<p>So, you just finished a grenade tutorial, ak tutorial, pistol or knife one. You have zero experience in 3d modelling, but by extensive handholding you managed to finish it, clicking exactly what tutor clicked and doing exactly tutor in the movie did. </p>\n<p>You learned nothing. Instead of writing a book using your own words, you've just copied the whole thing from someone else, not really learning anything, just followed the guides. Gained very little. Now youre asking where is the insed function. Or why extrude is making weird lines. Or where the selection thingy go, and what its named. Or similiar, basic question.</p>\n<p>Learning 3D (not 3d, anything in reality) is lenghty process. It takes months, even years to be reasonably good with it. It is boring as well, done the proper way, that will benefit you later. Due to availability of videotutorials and widespread internet access, where everyone can now \"teach\", its very easy to fall into a trap of being fooled about your own skills, by people who dont posses them on a level that'd allow them to evaluate your own.</p>\n<p>To avoid mistakes like these, you should take the boring way. Most, if  not all softwares, have quite good help files/manuals, either online or under universal, often ignored F1 key. Most of your questions are answered there, you just need to search them. Here are few links to help docs for certain softwares:</p>\n<p> </p>\n<p>3D Studio Max: <a href=\"http://help.autodesk.com/view/3DSMAX/2019/ENU/\">http://help.autodesk.com/view/3DSMAX/2019/ENU/</a></p>\n<p>Maya: <a href=\"https://help.autodesk.com/view/MAYAUL/2019/ENU/\">https://help.autodesk.com/view/MAYAUL/2019/ENU/</a></p>\n<p>Zbrush: <a href=\"http://docs.pixologic.com/\">http://docs.pixologic.com/</a></p>\n<p>Blender: <a href=\"https://docs.blender.org/manual/en/latest/\">https://docs.blender.org/manual/en/latest/</a></p>\n<p>Modo: <a href=\"https://learn.foundry.com/modo/content/help/pages/learn.html\">https://learn.foundry.com/modo/content/help/pages/learn.html</a></p>\n<p> </p>\n<p>If youre total beginner with the program, start with reading up the \"getting started / basic / introduction\" etc chapters, where everything is explained in a very simple way. Build your knowledge on top of it. Experiment with every function/tool on some simple shapes until you know what it does. After you go through all the explanatory chapters, and are comfortable with interface and tools available, then pick up a more complex tutorial, never before.</p>\n<p>Good luck.</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-10-28T14:39:57+01:00",
            "date_modified": "2019-10-28T14:40:35+01:00"
        },
        {
            "id": "https://propiro.github.io/most-common-mistakes-while-making-3d-asset.html",
            "url": "https://propiro.github.io/most-common-mistakes-while-making-3d-asset.html",
            "title": "Most common mistakes while making 3d asset.",
            "summary": "And how to avoid them, minimising the damage. If your model have issues, you most likely messed up some step or steps. Enjoy re-doing most of your work. Click here for explanation: ASSET CREATION GRAPH + EXPLANATION ",
            "content_html": "<p>And how to avoid them, minimising the damage. If your model have issues, you most likely messed up some step or steps. Enjoy re-doing most of your work.</p>\n<p>Click here for explanation: <a href=\"https://docs.google.com/drawings/d/1nmw99LDC6LnYAnZbNP67qj68Kxsug_XEBvtQX_qHJUs/edit?usp=sharing\">ASSET CREATION GRAPH + EXPLANATION</a></p>\n<p><img class=\"post__image\" src=\"https://propiro.github.io/media/posts/13/2019-09-05_15h39_03.png\" alt=\"\" width=\"365\" height=\"1659\"></p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-09-05T15:32:07+02:00",
            "date_modified": "2019-09-05T15:39:48+02:00"
        },
        {
            "id": "https://propiro.github.io/im-copypasta.html",
            "url": "https://propiro.github.io/im-copypasta.html",
            "title": "IM  Copypasta",
            "summary": "Taken from: https://github.com/propiro/instantMessengersPasta To be used when someone mentions change of currently used messenging application. We could always use Skype.Or Riot or MatrixOr NextCloudOr XMPPOr WireOr BriarOr ToxOr KontalkOr DeltaChatOr RingOr BitMessageOr RicochetOr PSYC2Or RocketOr IRCOr MattermostOr ZulipOr OrbitOr MumblOr SpectrumOr SignalOr KeybaseOr SureSpotOr SilenceOr&hellip;",
            "content_html": "<p class=\"align-center\">Taken from: <a href=\"https://github.com/propiro/instantMessengersPasta\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/propiro/instantMessengersPasta</a></p>\n<p>To be used when someone mentions change of currently used messenging application.</p>\n<p><code></code></p>\n<pre>We could always use Skype.\nOr Riot or Matrix\nOr NextCloud\nOr XMPP\nOr Wire\nOr Briar\nOr Tox\nOr Kontalk\nOr DeltaChat\nOr Ring\nOr BitMessage\nOr Ricochet\nOr PSYC2\nOr Rocket\nOr IRC\nOr Mattermost\nOr Zulip\nOr Orbit\nOr Mumbl\nOr Spectrum\nOr Signal\nOr Keybase\nOr SureSpot\nOr Silence\nOr Telegram like we do now\nOr IMS\nOr Discord\nOr Glitter\nOr Duo\nOr Keeperchat\nOr Wirck\nOr Threem\nOr Whatsapp\nOr Imessage\nOr MSTeams\nOr Facetime\nOr Line\nOr Allo\nOr iMessenge\nOr Skype\nOr Hangouts\nOr Reddit Chat \nOr Twitch\nOr Zoom\nOr Slack\nOr Instagram\nOr Snapchat\nOr Steam\nOr WeChat\nOr Kik\nOr Viber\nOr BBM\nOr Kakaotalk\nOr IMO\nOr QQ\nOr Zalo\nOr Tango\nOr Tuenti\nOr ICQ\nOr Gadugadu\nOr Pond\nOr SINC\nOr PSYC1\nOr Zephyr\nOr AIM\nOr MSN\nOr Yahoo Talk\nOr ooVoo\nOr Echo\nOr cdc.io\nOr Pidgen\nOr GroupMe\nOr Deltachat\nOr Zello\nOr Conpherence\nOr Teamspeak\nOr Hipchat\nOr Rivchat\nOr Die With Me\n\n\nOr we could just use SMS or MMS.</pre>\n<p><code></code></p>\n<p> </p>\n<iframe width=\"760\" height=\"760\" src=\"https://github.com/propiro/instantMessengersPasta/blob/master/pasta_en.txt\"> </iframe>\n<p class=\"align-center\"> </p>\n<p class=\"align-center\"> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-29T13:19:33+02:00",
            "date_modified": "2019-08-29T13:48:47+02:00"
        },
        {
            "id": "https://propiro.github.io/macroscript-movescale-uv-chunks-by-value.html",
            "url": "https://propiro.github.io/macroscript-movescale-uv-chunks-by-value.html",
            "title": "MACROSCRIPT: Move/Scale uv chunks by value",
            "summary": "Maxscript I wrote to help myself packing all the atlases from various textures, working on envirnoment jobs. Allows you to easily scale / move uv chunks / groups of them by defined values by clicking a D-PAD like controls. You need to have your UV&hellip;",
            "content_html": "<p>Maxscript I wrote  to help myself packing all the atlases from various textures, working on envirnoment jobs. Allows you to easily scale / move uv chunks / groups of them by defined values by clicking a D-PAD like controls. You need to have your UV islands selected for it to work.</p>\n<figure class=\"post__image post__image\" ><img src=\"https://propiro.github.io/media/posts/11/2019-08-20_19h35_46.png\" alt=\"\" width=\"206\" height=\"401\">\n<figcaption ></figcaption>\n</figure>\n<p>A big one:</p>\n<p><code>macroScript scaleUV</code><br><code> category:\"_Piro_Tools\"</code><br><code> toolTip:\"UV: Scale UVs\"</code><br><code> buttonText:\"Scale UVs\"</code><br><code>(</code><br><code> try(destroyDialog rolloutScaleUV )catch()</code><br><code> global scaleToUse = 100</code><br><code> global moveX = 1.5</code><br><code> global moveY = 1.5</code><br><code> global scaleMod = 1</code><br><code> --global scaleFN = 1</code><br><code> fn scaleUV scaleFN howScale=</code><br><code> (</code><br><code> if classof (modPanel.getCurrentObject()) == Unwrap_UVW do</code><br><code> (</code><br><code> try</code><br><code> (</code><br><code> undo \"Scale UVWs\" on</code><br><code> (</code><br><code> if (howScale == 1) then</code><br><code> (</code><br><code> $.modifiers[#unwrap_uvw].unwrap2.ScaleSelectedXY scaleFN scaleFN [0,0,0]</code><br><code> )</code><br><code> else if (howScale == 2) then</code><br><code> (</code><br><code> $.modifiers[#unwrap_uvw].unwrap2.ScaleSelectedXY scaleFN 1 [0,0,0]</code><br><code> ) </code><br><code> else if (howScale == 3) then</code><br><code> (</code><br><code> $.modifiers[#unwrap_uvw].unwrap2.ScaleSelectedXY 1 scaleFN [0,0,0]</code><br><code> ) </code><br> <br><code> --selection[1].unwrap_uvw.unwrap2.ScaleSelectedCenter (spnPercent.value/100.0) (rdoAxis.state-1)</code><br><code> )</code><br><code> )</code><br><code> catch</code><br><code> (</code><br><code> messageBox \"An unwrap modifier must be the active selection.\" title:\"Didn't Work\"</code><br><code> )</code><br><code> )</code><br><code> )</code><br> <br><code> fn moveXfunction moveXFN =</code><br><code> (</code><br><code> if classof (modPanel.getCurrentObject()) == Unwrap_UVW do</code><br><code> (</code><br><code> try</code><br><code> (</code><br><code> undo \"Scale UVWs\" on</code><br><code> ( </code><br><code> print \"inside moving function\"</code><br> <br><code> --$.modifiers[#unwrap_uvw].unwrap4.SetRelativeTypeIn off</code><br><code> $.modifiers[#unwrap_uvw].unwrap2.moveSelected [moveXFN,0,0]</code><br><code> --selection[1].unwrap_uvw.unwrap2.ScaleSelectedCenter (spnPercent.value/100.0) (rdoAxis.state-1)</code><br><code> )</code><br><code> )</code><br><code> catch</code><br><code> (</code><br><code> messageBox \"An unwrap modifier must be the active selection.\" title:\"Didn't Work\"</code><br><code> )</code><br><code> )</code><br><code> )</code><br> <br><code> fn moveYfunction moveYFN =</code><br><code> (</code><br><code> if classof (modPanel.getCurrentObject()) == Unwrap_UVW do</code><br><code> (</code><br><code> try</code><br><code> (</code><br><code> undo \"Scale UVWs\" on</code><br><code> ( </code><br><code> print \"inside moving function\"</code><br> <br><code> --$.modifiers[#unwrap_uvw].unwrap4.SetRelativeTypeIn off</code><br><code> $.modifiers[#unwrap_uvw].unwrap2.moveSelected [0,moveYFN,0]</code><br><code> --selection[1].unwrap_uvw.unwrap2.ScaleSelectedCenter (spnPercent.value/100.0) (rdoAxis.state-1)</code><br><code> )</code><br><code> )</code><br><code> catch</code><br><code> (</code><br><code> messageBox \"An unwrap modifier must be the active selection.\" title:\"Didn't Work\"</code><br><code> )</code><br><code> )</code><br><code> )</code><br> <br> <br><code> rollout rolloutScaleUV \"Scale UVs\" width: 170 </code><br><code> (</code><br> <br> <br> <br><code> spinner spnPercentA \"Percent: \" range:[-999,999,50] pos:[10,10]</code><br><code> spinner spnPercentB \"Percent: \" range:[-999,999,25] pos:[10,30]</code><br><code> spinner spnPercentC \"Percent: \" range:[-999,999,200] pos:[10,50]</code><br><code> radioButtons rdoAxis \"\" labels:#(\"XY\",\"X\",\"Y\") default:1 offset:[0,40] pos:[25,70]</code><br><code> button btnScale1 \"Scale A\" pos:[5,90]</code><br><code> button btnScale2 \"Scale B\" pos:[55,90]</code><br><code> button btnScale3 \"Scale C\" pos:[105,90]</code><br><code> spinner spnMoveX \"Move tile: \" range:[-99,99,0.5] pos:[20,125]</code><br><code> spinner spnMoveY \"Move tile: \" range:[-99,99,0.5] pos:[20,145]</code><br><code> button moveUp \"UP\" width:50 height:50 pos:[60, 180]</code><br><code> button moveLeft \"LEFT\" width:50 height:50 pos:[10, 230]</code><br><code> button moveRight \"RIGHT\" width:50 height:50 pos:[110, 230]</code><br><code> button moveDown \"DOWN\" width:50 height:50 pos:[60, 280]</code><br><code> label label1 \"...\"</code><br> <br> <br><code> on btnScale1 pressed do</code><br><code> (</code><br><code> scaleMod = rdoAxis.state</code><br><code>scaleToUse = spnPercentA.value / 100.0</code><br><code> scaleUV scaleToUse scaleMod </code><br><code> )</code><br> <br><code> on btnScale2 pressed do</code><br><code> (</code><br><code> scaleMod = rdoAxis.state</code><br><code>scaleToUse = spnPercentB.value / 100.0</code><br><code> scaleUV scaleToUse scaleMod </code><br><code> )</code><br> <br><code> on btnScale3 pressed do</code><br><code> (</code><br><code> scaleMod = rdoAxis.state</code><br><code>scaleToUse = spnPercentC.value / 100.0</code><br><code> scaleUV scaleToUse scaleMod </code><br><code> )</code><br> <br><code> on moveLeft pressed do</code><br><code> (</code><br><code> print \"MovingLeft\"</code><br><code>moveX = (spnMoveX.value * -1.0)</code><br><code> moveXfunction(moveX)</code><br><code> )</code><br><code> on moveRight pressed do</code><br><code> (</code><br><code> print \"MovingRight\"</code><br><code>moveX = (spnMoveX.value * 1.0)</code><br><code> moveXfunction(moveX)</code><br><code> )</code><br> <br><code> on moveUp pressed do</code><br><code> (</code><br><code> print \"MovingLeft\"</code><br><code>moveY = (spnMoveY.value * 1.0)</code><br><code> moveYfunction(moveY)</code><br><code> )</code><br><code> on moveDown pressed do</code><br><code> (</code><br><code> print \"MovingRight\"</code><br><code>moveY = (spnMoveY.value * -1.0)</code><br><code> moveYfunction(moveY)</code><br><code> )</code><br><code> )</code><br><br><code> createDialog rolloutScaleUV</code><br><code>)</code></p>\n<p> </p>\n<p>As always, you'll find it here:</p>\n<p><img class=\"post__image\" src=\"https://propiro.github.io/media/posts/11/2019-08-20_19h21_19.png\" alt=\"\" width=\"402\" height=\"123\"></p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-20T19:37:36+02:00",
            "date_modified": "2019-08-20T19:37:36+02:00"
        },
        {
            "id": "https://propiro.github.io/maxscript-change-the-uvw-unwrap-checker-size-on-the-fly.html",
            "url": "https://propiro.github.io/maxscript-change-the-uvw-unwrap-checker-size-on-the-fly.html",
            "title": "MAXSCRIPT: Change the UVW Unwrap checker size on the fly.",
            "summary": "Script that does something noone thinks about unless needed - adjusts size (or tiling if you wish) of checker board from UVW Unwrap modifier window (so it doesnt touch your material tiling, and checker vanishes after you exit UWV Modifier) Includes two macros, one for&hellip;",
            "content_html": "<p>Script that does something noone thinks about unless needed - adjusts size (or tiling if you wish) of checker board from UVW Unwrap modifier window (so it doesnt touch your material tiling, and checker vanishes after you exit UWV Modifier)</p>\n<p>Includes two macros, one for enlarging one for shrinking the tiling value:</p>\n<p><code>macroScript Chkr_plus category:\"_Piro_Tools\" tooltip:\"+\" </code><br><code>(</code><br><code> chkCoords = selection[1].unwrap_uvw.checkermaterial.diffusemap.coords</code><br><code> chkCoords.u_tiling = chkCoords.u_tiling + 1</code><br><code> chkCoords.v_tiling = chkCoords.v_tiling + 1</code><br><code>)</code></p>\n<p><code>macroScript Chkr_minus category:\"_Piro_Tools\" tooltip:\"-\" </code><br><code>(</code><br><code> chkCoords = selection[1].unwrap_uvw.checkermaterial.diffusemap.coords</code><br><code> chkCoords.u_tiling = chkCoords.u_tiling - 1</code><br><code> chkCoords.v_tiling = chkCoords.v_tiling - 1</code><br><code>)</code></p>\n<p> </p>\n<p>As always, find it under:</p>\n<p><img class=\"post__image\" src=\"https://propiro.github.io/media/posts/10/2019-08-20_19h21_19.png\" alt=\"\" width=\"402\" height=\"123\"></p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-20T19:29:41+02:00",
            "date_modified": "2019-08-30T14:37:32+02:00"
        },
        {
            "id": "https://propiro.github.io/maxscript-centering-pivot-on-selected-object.html",
            "url": "https://propiro.github.io/maxscript-centering-pivot-on-selected-object.html",
            "title": "MAXSCRIPT: Centering pivot on selected object.",
            "summary": "Small, very simple script that saves me few clicks: macroScript centerPivot Category:\"_Piro_Tools\" toolTip:\"Center Pivot\" ( $.pivot = $.center ) Centers the object pivot to geometry-weighted center, especially usefull when you duplicate mesh elements using shift+drag method. Found again here: Bind it to key, quad or toolbar as&hellip;",
            "content_html": "<p>Small, very simple script that saves me few clicks:</p>\n<p><code>macroScript centerPivot Category:\"_Piro_Tools\" toolTip:\"Center Pivot\"</code><br><code>(</code><br><code> $.pivot = $.center</code><br><code>)</code></p>\n<p>Centers the object pivot to geometry-weighted center, especially usefull when you duplicate mesh elements using shift+drag method.</p>\n<p>Found again here:</p>\n<p><img class=\"post__image\" src=\"https://propiro.github.io/media/posts/9/2019-08-20_19h21_19.png\" alt=\"\" width=\"402\" height=\"123\"></p>\n<p>Bind it to key, quad or toolbar as you wish.</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-20T19:25:58+02:00",
            "date_modified": "2019-08-20T19:25:58+02:00"
        },
        {
            "id": "https://propiro.github.io/maxscript-copy-and-paste-files-between-max-instances-and-scenes.html",
            "url": "https://propiro.github.io/maxscript-copy-and-paste-files-between-max-instances-and-scenes.html",
            "title": "MAXSCRIPT: Copy &amp; Paste files between max instances and scenes",
            "summary": "Two small maxscript macros that let you copy and paste files using a temporary file created in $autoback directory. macroScript Copy_Objects_To_File Category:\"_Piro_Tools\" toolTip:\"CopyToFile\" ( thecopypastedir = getdir #autoback thecopypastefile = \"\\pastefile.max\" thecopypastestring = thecopypastedir + thecopypastefile if $ != undefined do saveNodes $ thecopypastestring )&hellip;",
            "content_html": "<p>Two small maxscript macros that let you copy and paste files using a temporary file created in $autoback directory.</p>\n<p><code>macroScript Copy_Objects_To_File Category:\"_Piro_Tools\" toolTip:\"CopyToFile\"<br>(<br> thecopypastedir = getdir #autoback <br> thecopypastefile = \"\\pastefile.max\" <br> thecopypastestring = thecopypastedir + thecopypastefile <br> <br> if $ != undefined do <br> saveNodes $ thecopypastestring <br>)<br><br>macroScript Paste_Objects_From_File Category:\"_Piro_Tools\" toolTip:\"PasteFromFile\"<br>(<br> thecopypastedir = getdir #autoback -- folder kopiowania<br> thecopypastefile = \"\\pastefile.max\" --nazwa dla pliku...<br> thecopypastestring = thecopypastedir + thecopypastefile --string dla funkcji kopiowania<br><br> mergemaxfile (thecopypastedir + thecopypastefile) #select -- merge of pasted objects<br>)</code></p>\n<p>Save the file as something.ms, run it inside max through maxscript -&gt; run script (or drag n drop if you're administrator), you'll find the two macros here:</p>\n<p><img class=\"post__image\" src=\"https://propiro.github.io/media/posts/8/2019-08-20_19h21_19.png\" alt=\"\" width=\"402\" height=\"123\"></p>\n<p>Assign them to shortcut, button or quad (im using quad menu for that), enjoy.</p>\n<p> </p>\n<p> </p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-20T19:22:41+02:00",
            "date_modified": "2019-08-20T19:22:41+02:00"
        },
        {
            "id": "https://propiro.github.io/fresh-artists-portfolio-tips.html",
            "url": "https://propiro.github.io/fresh-artists-portfolio-tips.html",
            "title": "Fresh Artists Portfolio Tips",
            "summary": "Or rather, tip. Just one, at least in this post. Portfolio is equivalent of your shop front, you put only things that someone would want to buy, and you want to sell - That beign said, your best skills. Never, ever, post things that are&hellip;",
            "content_html": "<p>Or rather, tip. Just one, at least in this post.</p>\n<p>Portfolio is equivalent of your shop front, you put only things that someone would want to buy, and you want to sell - That beign said, your best skills. Never, ever, post things that are \"so-so\", with bunch of excuses about how quickly you did it or that your favorite cat puked on the carpet and thats why roughness is sRGB and solidcolor. These things belong to your journal / blog ( look at me, im ranting here, not on my artstation page! ), not on your portfolio, that you'll sent to potential employer, and people who are looking for possibly best artist out there.</p>\n<p>Always post things that are best representation of your skill, and good idea is to seek feedback before going public. There is a lot of forums and discords, you can always ask there - probably response wont be nice and fluffy, but at least you'll get a feedback about what to change where. Take it, improve, repeat. And after a year or two, when you see improvement, its good idea to purge some old works - keep a copy on your HDD or e-mail, but don't show old stuff that fail to impress even you at this point. </p>\n<p><em>Portfolio is your shop front, with best items. Not your journal where you put a tutorial piece that youre proud of, because someone hand-holded you through 20hours of video.</em></p>\n<p>Or post any shit you want, I don't care. Just remember that it takes recruiter around 6 seconds of looking at portfolio before they decide if they want to click on next image or close the browser tab, because something caused them eyebleeding.</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-19T22:51:26+02:00",
            "date_modified": "2019-08-19T23:21:44+02:00"
        },
        {
            "id": "https://propiro.github.io/duning-kruger-effect-aka-why-people-think-they-have-superpowers-and-can-bend-time.html",
            "url": "https://propiro.github.io/duning-kruger-effect-aka-why-people-think-they-have-superpowers-and-can-bend-time.html",
            "title": "Duning - Kruger effect, AKA why people think they have superpowers and can bend time.",
            "summary": " Take a look at this graph. This is perfect explanation on why I hear a lot of very young people, starting in industry ( Gamedev here, but applies to many other areas of life/business ), either evaluating work for impossible low hour-budgets, or taking waaay to&hellip;",
            "content_html": "<p><img src=\"https://graphpaperdiaries.files.wordpress.com/2017/08/dunning-kruger-chart.jpg\" alt=\"Znalezione obrazy dla zapytania dunning kruger graph\"></p>\n<p>Take a look at this graph. This is perfect explanation on why I hear a lot of very young people, starting in industry ( Gamedev here, but applies to many other areas of life/business ), either evaluating work for impossible low hour-budgets, or taking waaay to complex tasks on themselves, only to fail miserably.</p>\n<p><em>It's very hard for people to evaluate something correctly, even their own experience, without the experience itself.</em></p>\n<p>And thats why I trust more a person who approach a task carefully with budget buffers, rather than confident people who spent too much time convincing me everything will be amazing.</p>",
            "author": {
                "name": "piro"
            },
            "tags": [
            ],
            "date_published": "2019-08-19T22:39:45+02:00",
            "date_modified": "2019-08-19T22:39:45+02:00"
        }
    ]
}
