<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>propiro.github.io</title>
    <link href="https://propiro.github.io/feed.xml" rel="self" />
    <link href="https://propiro.github.io" />
    <updated>2022-03-06T16:22:27+01:00</updated>
    <author>
        <name>piro</name>
    </author>
    <id>https://propiro.github.io</id>

    <entry>
        <title>UHK Exreme tenting elevation feet, 3D Printed</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/uhk-exreme-tenting-elevation-feet-3d-printed.html"/>
        <id>https://propiro.github.io/uhk-exreme-tenting-elevation-feet-3d-printed.html</id>
            <category term="input_devices"/>
            <category term="hacks"/>
            <category term="DIY"/>

        <updated>2022-03-06T16:22:27+01:00</updated>
            <summary>
                <![CDATA[
                    Since I'm very happy user of UHK - Ultimate Hacking Keyboard - a ridiculously priced, but worth every dollar, split ergonomic 60% keyboard, I couldnt be myself if I didn't had to mod it a little. While I still have a custom-modules interface project in&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Since I'm very happy user of UHK - Ultimate Hacking Keyboard - a ridiculously priced, but worth every dollar, split ergonomic 60% keyboard, I couldnt be myself if I didn't had to mod it a little. While I still have a custom-modules interface project in my drawer that I might get back at some point (I only started it because I was pissed ad UHK for delaying modules while announcing UHK v2), I've decided to take the customisable elevation (called tenting for split keyboards) to next level.</p>
<p>After few measurements, a crude 3d model was made and sliced: <figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/29/ss_2022-03-05-03h28_56_SuperSlicer_2.3.57aflavoredversionofSlic3rbasedonPrusaSlicer.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/29/responsive/ss_2022-03-05-03h28_56_SuperSlicer_2.3.57aflavoredversionofSlic3rbasedonPrusaSlicer-xs.jpg 300w ,https://propiro.github.io/media/posts/29/responsive/ss_2022-03-05-03h28_56_SuperSlicer_2.3.57aflavoredversionofSlic3rbasedonPrusaSlicer-sm.jpg 480w ,https://propiro.github.io/media/posts/29/responsive/ss_2022-03-05-03h28_56_SuperSlicer_2.3.57aflavoredversionofSlic3rbasedonPrusaSlicer-md.jpg 768w"  alt="" width="2501" height="1442"></figure>
<p>And it printed fairly well:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/29/ss_2022-03-06-16h10_08_Ferdi-Telegram.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/29/responsive/ss_2022-03-06-16h10_08_Ferdi-Telegram-xs.jpg 300w ,https://propiro.github.io/media/posts/29/responsive/ss_2022-03-06-16h10_08_Ferdi-Telegram-sm.jpg 480w ,https://propiro.github.io/media/posts/29/responsive/ss_2022-03-06-16h10_08_Ferdi-Telegram-md.jpg 768w"  alt="You know its my photo because of the massacred table." width="1209" height="904"></figure>
<p>For best results, I strongly suggest printing with elastic/rubber filament, otherwise you might need to scale them by 1-2% in all axes to make them fit, but not fell off.</p>
<p>Here is comparison of various elecation levels (Im using the highest one, as its most easy for my wrists):</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="4">
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_22_Ferdi-Telegram.jpg" data-size="1203x886"><img loading="lazy" src="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_22_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="566"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_33_Ferdi-Telegram.jpg" data-size="1210x905"><img loading="lazy" src="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_33_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="574"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_46_Ferdi-Telegram.jpg" data-size="1204x902"><img loading="lazy" src="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_46_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="575"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_59_Ferdi-Telegram.jpg" data-size="1215x907"><img loading="lazy" src="https://propiro.github.io/media/posts/29/gallery/ss_2022-03-06-16h10_59_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="573"></a></figure>
</div></div>
<p>Green ones were test prints with SLA, as I was curious by mechanical properties of it, black ones are FDM printed.</p>
<p>Works well, nothing more to write about. You can find STL for these in my github soon.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>3D Connexion Space Pilot Pro in 2022</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/3d-connexion-space-pilot-pro-in-2022.html"/>
        <id>https://propiro.github.io/3d-connexion-space-pilot-pro-in-2022.html</id>
            <category term="input_devices"/>
            <category term="hardware"/>

        <updated>2022-03-04T22:05:18+01:00</updated>
            <summary>
                <![CDATA[
                    TLDR version for people who dont want to read everything: Version for people who like to read: I was always skeptical about 3d connexion products. Back in the early 2000, I've found their devices too cumbersome to work efficiently with. In 2004, I've found the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>TLDR version for people who dont want to read everything:</p>
<ul>
<li>Allows for controlling viewports independently from mouse clicks, makes work in unity3d much faster, especially lookdev, that made my life much easier</li>
<li>LCD isnt that usefull, you can buy cheaper version without it*</li>
<li>could have more keys</li>
<li>check if your software supports it first!</li>
<li>customisation is through ton of .xml files, after some digging you can easily edit profiles to make it work in non-3d applications like browsers or text editors (scrolling through large chunks of text is suprisingly pleasant)</li>
</ul>
<p>Version for people who like to read:</p>
<p>I was always skeptical about 3d connexion products. Back in the early 2000, I've found their devices too cumbersome to work efficiently with.</p>
<p>In 2004, I've found the new generation of 3d mouses too expensive for what they offered.</p>
<p>In 2010, I've found software I've used most common (3ds max / unity) to have poor support, and while the device worked <em>somewhat, </em>I've found my keyboard-centric style of work much faster than operating the 3d device.</p>
<p>In 2022, I've found Space Pilot Pro for roughly 40% of the price (I'll tell you why in a moment), and some discussion with friends who worked on them, I've decided to try yet another time. So Here it is:</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="2">
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/28/gallery/ss_2022-03-04-21h49_32_Ferdi-Telegram.jpg" data-size="1054x584"><img loading="lazy" src="https://propiro.github.io/media/posts/28/gallery/ss_2022-03-04-21h49_32_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="426"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/28/gallery/ss_2022-03-04-21h49_20_Ferdi-Telegram-2.jpg" data-size="856x553"><img loading="lazy" src="https://propiro.github.io/media/posts/28/gallery/ss_2022-03-04-21h49_20_Ferdi-Telegram-2-thumbnail.jpg" alt="" width="768" height="496"></a></figure>
</div></div>
<p>40% of the price, slightly used, fine deal.</p>
<p>I've quickly discovered why it was such bargain:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/28/ss_2022-03-02-20h36_06_3DconnexionSettings.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/28/responsive/ss_2022-03-02-20h36_06_3DconnexionSettings-xs.jpg 300w ,https://propiro.github.io/media/posts/28/responsive/ss_2022-03-02-20h36_06_3DconnexionSettings-sm.jpg 480w ,https://propiro.github.io/media/posts/28/responsive/ss_2022-03-02-20h36_06_3DconnexionSettings-md.jpg 768w"  alt="" width="472" height="432"></figure>
<p>Apperently support for this device ended q3 2021, however even the newest drivers worked fine with 2022 versions of my software  packages and this device, so it doesn't concern me at this moment.</p>
<p>The device itself work great this time. Mostly due to now-excellent software support in most programs i work in (3ds max / fusion360 / photoshop), as well some dedicated people who made extensions for sotware that didnt worked out of the box (unity 3d - big thanks to Patrick Hogenboom for his unity package: <a href="https://assetstore.unity.com/packages/tools/spacenavigator-driver-9774" target="_blank" rel="noopener noreferrer">space navigator driver for unity</a>)</p>
<p>After roughly 2h of arranging buttons to my liking, tweaking all analog axes, I've finally managed to control viewport efficiently with the device. It wont help me much during modelling, but evaluation of models and quick fixes during inspection are much more comfortable with the 3d camera control</p>
<p>Im still lacking lot of buttons to mirror my keyboard shorcuts (I might end up designing custom keyboard that'll be put on top of not-so-usefull lcd), so my main modelling tasks are done using keyboard and mouse combo, but all models/scenes evaluation, fixes and material lookdev work is done using space pilot device and mouse.</p>
<p>As for the LCD goes, its handled by... Logitech LCD software, same as in gaming keyboards etc, which was a unexpected, but pleasant suprise. By default, lcd present a very little value, boosting the price of device by several percent, and giving me... rss reader and photo viewer, along with barely-working hotkey preview - it'd be fine, if I wanted to look at the screen for long periods of time. Bit dissapointed by its usability, I've quickly found that my favorite gpu monitoring software, MSI Afterburner, offers plugin for logitech gaming accessories, which accidentially works with logitech lcd manager that handles the screen, so:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/28/ss_2022-03-04-21h47_44_Ferdi-Telegram.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/28/responsive/ss_2022-03-04-21h47_44_Ferdi-Telegram-xs.jpg 300w ,https://propiro.github.io/media/posts/28/responsive/ss_2022-03-04-21h47_44_Ferdi-Telegram-sm.jpg 480w ,https://propiro.github.io/media/posts/28/responsive/ss_2022-03-04-21h47_44_Ferdi-Telegram-md.jpg 768w"  alt="" width="672" height="891">  </figure>
<p>Screen became bit less useless - now if I have something on fullscreen / I'm connected to different machine / I'm rendering scenes and have screens turned off, I can check resource usage, and see if it ended work / crashed itself. Nice detail.</p>
<p>Thats being said, device will probably stay on my desk for longer, especially proven to be very usefull during unity3d work, and suprisingly, when browsing web.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>VIVALDI (And possibly other browsers after some work) 3D Connexion two axis scroll profile.</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/vivaldi-and-possibly-other-browsers-after-some-work-3d-connexion-two-axis-scroll-profile.html"/>
        <id>https://propiro.github.io/vivaldi-and-possibly-other-browsers-after-some-work-3d-connexion-two-axis-scroll-profile.html</id>
            <category term="input_devices"/>
            <category term="hacks"/>

        <updated>2022-03-04T21:15:55+01:00</updated>
            <summary>
                <![CDATA[
                    With recent aquisition of post-leasing 3d connexion space pilot controller, I've been told by friend that its extremaly comfy to use to scroll websites - and it is! However, default config / Chrome config dont support 2 axis scrolling, and there is no straightforward way&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>With recent aquisition of post-leasing 3d connexion space pilot controller, I've been told by friend that its extremaly comfy to use to scroll websites - and it is!</p>
<p>However, default config / Chrome config dont support 2 axis scrolling, and there is no straightforward way to do it.</p>
<p>After some tinkering with the XML profiles, I've managed to make a vivaldi (in my example, but if you copy content to desired browser profile xml with changing executableName file it should work as well) scroll in both top-bottom direction, as well left and right - which is especially usefull while checking high-res images on the web, or reading huge blocks of text that wasnt OCR correctly and are still hosted in pdf/png.</p>
<p>Code of the profile:</p>
<p>  <code>&lt;?xml version="1.0" encoding="utf-8" standalone="no"?&gt;<br>&lt;AppCfg xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Default="false" CfgFormatVersion="1.3" ThisFileVersion="1.13"&gt;<br>  &lt;AppInfo&gt;<br>    &lt;Signature&gt;<br>      &lt;Name&gt;vivaldi&lt;/Name&gt;<br>      &lt;ExecutableName&gt;vivaldi.exe&lt;/ExecutableName&gt;<br>    &lt;/Signature&gt;<br>    &lt;Options /&gt;<br>  &lt;/AppInfo&gt;<br>  &lt;CfgProperties&gt;<br>    &lt;ID&gt;ID_vivaldi&lt;/ID&gt;<br>    &lt;Name&gt;vivaldi&lt;/Name&gt;<br>    &lt;InheritsFromID&gt;ID_Default_KMJ_Cfg&lt;/InheritsFromID&gt;<br>  &lt;/CfgProperties&gt;<br>  &lt;Devices&gt;<br>    &lt;Device&gt;<br>      &lt;ID&gt;ID_Standard_3D_Mouse&lt;/ID&gt;<br>      &lt;AxisBank Default="true"&gt;<br>        &lt;ID&gt;Default&lt;/ID&gt;<br>        &lt;Name&gt;STR_DEFAULT_BANK&lt;/Name&gt;<br>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_X&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_X&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;<br>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Y&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Y&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;<br>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Z&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;HIDMouse_Wheel&lt;/ActionID&gt;<br>            &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>            &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>            &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>            &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>            &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;<br>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Rx&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;HIDMouse_Wheel&lt;/ActionID&gt;<br>            &lt;Scale&gt;1.0000&lt;/Scale&gt;<br>            &lt;Reversed&gt;true&lt;/Reversed&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;<br>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Ry&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;!-- mhoopes --&gt;<br>            &lt;ActionID&gt;HIDMouse_Wheel&lt;/ActionID&gt;<br>            &lt;Modifiers&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>            &lt;/Modifiers&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;<br>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Rz&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Rz&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;<br>      &lt;/AxisBank&gt;<br>    &lt;/Device&gt;<br>    &lt;Device&gt;<br>      &lt;ID&gt;ID_ProductID_C629&lt;/ID&gt;<br>      &lt;ButtonBank Default="true"&gt;<br>        &lt;Name&gt;STR_DEFAULT_BUTTONBANK&lt;/Name&gt;<br>        &lt;ID&gt;Default&lt;/ID&gt;<br>        &lt;Button&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDButton_22&lt;/ActionID&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;KB_Alt&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Button&gt;<br>        &lt;Button&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDButton_17&lt;/ActionID&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;Ctrl+P&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Button&gt;<br>        &lt;Button&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDButton_2&lt;/ActionID&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;App_ResetYourView&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Button&gt;<br>        &lt;Button&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDButton_11&lt;/ActionID&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;ActionID&gt;Ctrl+Shift&lt;/ActionID&gt;<br>          &lt;/Output&gt;<br>        &lt;/Button&gt;<br>      &lt;/ButtonBank&gt;<br>    &lt;/Device&gt;<br>  &lt;/Devices&gt;<br>  &lt;AuthorInfo&gt;<br>    &lt;DriverVersion&gt;17.8.5.19118&lt;/DriverVersion&gt;<br>    &lt;LastChange&gt;<br>      &lt;Tool&gt;3DxSmartUI.exe&lt;/Tool&gt;<br>      &lt;Version&gt;1.2.22028.19118&lt;/Version&gt;<br>      &lt;Date&gt;3/3/2022 8:45:01 PM UTC&lt;/Date&gt;<br>      &lt;User&gt;piro&lt;/User&gt;<br>    &lt;/LastChange&gt;<br>    &lt;Created&gt;<br>      &lt;Tool&gt;3DxService.exe&lt;/Tool&gt;<br>      &lt;Version&gt;17.8.5.19118&lt;/Version&gt;<br>      &lt;Date&gt;2022:3:3:2:17:50:8:996&lt;/Date&gt;<br>      &lt;User&gt;piro&lt;/User&gt;<br>    &lt;/Created&gt;<br>  &lt;/AuthorInfo&gt;<br>  &lt;Settings&gt;<br>    &lt;OverallScale&gt;1.00&lt;/OverallScale&gt;<br>  &lt;/Settings&gt;<br>  &lt;MacroTable&gt;<br>    &lt;MacroEntry&gt;<br>      &lt;ID&gt;Ctrl+P&lt;/ID&gt;<br>      &lt;KeyStroke&gt;<br>        &lt;Modifiers&gt;<br>          &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>        &lt;/Modifiers&gt;<br>        &lt;Key&gt;13&lt;/Key&gt;<br>      &lt;/KeyStroke&gt;<br>    &lt;/MacroEntry&gt;<br>    &lt;MacroEntry&gt;<br>      &lt;ID&gt;Ctrl+Shift&lt;/ID&gt;<br>      &lt;KeyStroke&gt;<br>        &lt;Modifiers&gt;<br>          &lt;Modifier&gt;Control&lt;/Modifier&gt;<br>        &lt;/Modifiers&gt;<br>        &lt;Key&gt;E1&lt;/Key&gt;<br>      &lt;/KeyStroke&gt;<br>    &lt;/MacroEntry&gt;<br>  &lt;/MacroTable&gt;<br>&lt;/AppCfg&gt;</code></p>
<p>After replacing it, you can add normal key shortcuts using 3d connexion software.</p>
<p>If youre interested just in vertical scrolling fragment:</p>
<p><code>        &lt;Axis&gt;<br>          &lt;Enabled&gt;true&lt;/Enabled&gt;<br>          &lt;Input&gt;<br>            &lt;ActionID&gt;HIDMultiAxis_Ry&lt;/ActionID&gt;<br>            &lt;Min&gt;-512&lt;/Min&gt;<br>            &lt;Max&gt;511&lt;/Max&gt;<br>          &lt;/Input&gt;<br>          &lt;Output&gt;<br>            &lt;!-- mhoopes --&gt;<br>            &lt;ActionID&gt;HIDMouse_Wheel&lt;/ActionID&gt;<br>            &lt;Modifiers&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>              &lt;Modifier&gt;Shift&lt;/Modifier&gt;<br>            &lt;/Modifiers&gt;<br>          &lt;/Output&gt;<br>        &lt;/Axis&gt;</code></p>
<p>Thats the part that re-maps device's Ry axis to mouse scroll + shift.</p>
<p>The trickiest part was to make software NOT overwrite my changes, turned out that while normal config directory is: </p>
<p>C:\Program Files\3Dconnexion\3DxWare\3DxWinCore\Cfg\vivaldi.xml</p>
<p>After reboot, it somehow overwrite my profile, and correct location was:</p>
<p>C:\Users\piro\AppData\Roaming\3Dconnexion\3DxWare\Cfg\vivaldi-KMJ.xml</p>
<p> </p>
<p>Hope someone will find this little hack usefull.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>NATEC WIRELESS VERTICAL MOUSE</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/natec-wireless-vertical-mouse.html"/>
        <id>https://propiro.github.io/natec-wireless-vertical-mouse.html</id>
            <category term="technology"/>
            <category term="input_devices"/>
            <category term="hardware"/>

        <updated>2022-03-04T21:25:27+01:00</updated>
            <summary>
                <![CDATA[
                    This won't be a review. Noone paid me for it, and its purpose isnt to convince you to buy product. Consider it a summary of experiences with device, what pissed me much and what was nice. Recently I've been introduced to vertical mouse idea -&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>This won't be a review. Noone paid me for it, and its purpose isnt to convince you to buy product. Consider it a summary of experiences with device, what pissed me much and what was nice.</p>
<p>Recently I've been introduced to vertical mouse idea - I spent waaay too much time working with computer, and my day-to-day input device, Logitech G604, started to give me mild wrist pains when used 8h+ daily. My accountant, bless her hearth, let me test several vertical mouses she bought for girls in her office, and after initially liking the concept, I've purchased titular NATEC WIRELESS VERTICAL MOUSE, called EUPHONIE.</p>
<p>The device itself:</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="3">
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_16_Ferdi-Telegram.jpg" data-size="685x908"><img loading="lazy" src="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_16_Ferdi-Telegram-thumbnail.jpg" alt="" width="685" height="908"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_04_Ferdi-Telegram.jpg" data-size="1217x913"><img loading="lazy" src="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_04_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="576"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_28_Ferdi-Telegram.jpg" data-size="1119x743"><img loading="lazy" src="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_28_Ferdi-Telegram-thumbnail.jpg" alt="" width="768" height="510"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_50_Ferdi-Telegram.jpg" data-size="660x724"><img loading="lazy" src="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_50_Ferdi-Telegram-thumbnail.jpg" alt="" width="660" height="724"></a></figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_39_Ferdi-Telegram.jpg" data-size="627x859"><img loading="lazy" src="https://propiro.github.io/media/posts/26/gallery/ss_2022-03-04-20h42_39_Ferdi-Telegram-thumbnail.jpg" alt="" width="627" height="859"></a></figure>
</div></div>
<p>What I've expected from the device:</p>
<ul>
<li>Be vertical</li>
<li>Have more than standard 2+wheel input options</li>
<li>Be configurable</li>
<li>Be wireless with option of working on cable while charging, ideally ear common batteries/accumulators like AA or AAA eneloops.</li>
</ul>
<p>What I got when buying this relatively cheap (40usd, 140 polish onions)device:</p>
<ul>
<li>Vertical</li>
<li>5 additional buttons to set up*</li>
<li>"configurable" option*</li>
<li>Wireless and on cable while charging, albeit very slow</li>
<li>BONUS: ability to pair bluetooth device in addition to 2.4Ghz receiver</li>
<li>BONUS: small OLED screen, albeit pretty useless due to lack of any control software</li>
<li>BONUS: mouse have small slot for receiver, so dongle itself wont be easily lost while moving around places.</li>
<li>BONUS: A smile from english version of manual that says my mouse have microphone (Manufacturer/Seller is apprently polish (PRC made), which suprised me), Polish version of manual is written correctly</li>
</ul>
<p>*-not really compared to other manufacturers.</p>
<p>Someone would say I've got more than I initially wanted, and its true, however, I'd trade all the bonus features for 100% working core feature of customising buttons. Options are very limited, as I present them in this gif:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/26/OH_WOW_SO_MANY_OPTIONS_NATEC_VERTICAL_MOUSE.gif" alt="POSSIBILITIES ARE ENDLESS" width="480" height="372"></figure>
<p>And yes, I've tried multiple hacks / remapping tools / registry modification to at least change "calculator" to do something else, sadly, its not done by standard multimedia key, so its not easy to be caught by any remapping software.</p>
<p>Thats being said, I swap g604 for vertical mouse when i work in CAD/3D software mostly, and since my workflow is very keyboard-centric, I can somehow live with only 5 buttons being used instead of 7 (Back and Forward are standard and must have, Thumb-bottom one is escape which is fine as i can close dialogs quickly - i jus wish i could bind some keyboard keys (even delete / enter) to the top two ones). The two top ones  will be left for controlling volume, which is really a compromise, and as we know, compromise makes noone happy, as noone got what they wanted initially.</p>
<p>TL;DR</p>
<p>Buy if you want wireless vertical mouse and dont plan to use extra buttons except Forward - Backward. Otherwise, buy anything from logitech that have setpoint integration and allows you to completely re-map everything.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Arduino Prototyping Physical Framework</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/arduino-prototyping-physical-framework.html"/>
        <id>https://propiro.github.io/arduino-prototyping-physical-framework.html</id>
            <category term="other"/>
            <category term="hacks"/>
            <category term="DIY"/>

        <updated>2022-02-08T19:23:25+01:00</updated>
            <summary>
                <![CDATA[
                    Recently I've returned to working with arduino and similiar modules, and got quickly fed-up with cable mess on the table, having everything connected with cables, lying loosely. Being unhappy with ready-to-print things I've found out on the internet, because most of them required either aluminium&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Recently I've returned to working with arduino and similiar modules, and got quickly fed-up with cable mess on the table, having everything connected with cables, lying loosely.</p>
<p>Being unhappy with ready-to-print things I've found out on the internet, because most of them required either aluminium spacers, were too simple-minded forcing me to use certain layout and nothing else, or beign straight up 25x25cm flat printed board, I've decided to delegate some of my time to make my own "system" of customisable frame for arduino prototyping, so everything could stay in one place, at the expense of few hours of printing.</p>
<p>Main requirements/goals I've set up for the system:</p>
<ul>
<li>Only printed parts, no aluminium spacers, no metal rods, no hotglue. Screws / zipties are compromise if needed.</li>
<li>Easily stackable</li>
<li>Easily expandable (at first by stacking vertically, then by extending horisontally as well if required)</li>
<li>High customisability to the point I could swap sub-modules easily without need of re-printing half of the frame.</li>
<li>Some degree of mechanical interlocking everything so it doesnt fell apart at the slightest move. </li>
<li>Minimum postprocessing, ideally none - no supports, no smoothing, no filing, no drilling.</li>
</ul>
<p>So, after some though process, I had first iteration of elements in 3ds max:</p>
<figure class="post__image" ><img loading="lazy" src="https://propiro.github.io/media/posts/25//2022-02-08_10h40_56.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/25//responsive/2022-02-08_10h40_56-xs.jpg 300w ,https://propiro.github.io/media/posts/25//responsive/2022-02-08_10h40_56-sm.jpg 480w ,https://propiro.github.io/media/posts/25//responsive/2022-02-08_10h40_56-md.jpg 768w"  alt="first iteration of frame" width="2159" height="1153">
<figcaption >This is actually screenshot of third iteration, but first that was printed.</figcaption>
</figure>
<p> </p>
<p>Result of printing, quite good for 3 revisions inside software without physicalprototype first:</p>
<figure class="post__image" ><img loading="lazy" src="https://propiro.github.io/media/posts/25//2022-02-08_10h54_25.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/25//responsive/2022-02-08_10h54_25-xs.jpg 300w ,https://propiro.github.io/media/posts/25//responsive/2022-02-08_10h54_25-sm.jpg 480w ,https://propiro.github.io/media/posts/25//responsive/2022-02-08_10h54_25-md.jpg 768w"  alt="frame prototype, first print, first success" width="1233" height="922">
<figcaption >Frame prototype, first print, first success</figcaption>
</figure>
<p>Now that I knew I have working frame, I should make some inserts into it for components. I've started with two arduinos i had at hand: uno and mega.</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="3">
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/25/gallery/2022-02-08_11h46_11.jpg" data-size="1051x754"><img loading="lazy" src="https://propiro.github.io/media/posts/25/gallery/2022-02-08_11h46_11-thumbnail.jpg" alt="arduino uno and mega screwed to inserts" width="768" height="551"></a>
<figcaption>arduino uno and mega screwed to inserts</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/25/gallery/2022-02-08_11h46_20.jpg" data-size="1211x653"><img loading="lazy" src="https://propiro.github.io/media/posts/25/gallery/2022-02-08_11h46_20-thumbnail.jpg" alt="arduino uno and mega screwed to inserts, put into frames" width="768" height="414"></a>
<figcaption>arduino uno and mega screwed to inserts, put into frames</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/25/gallery/2022-02-08_11h46_32.jpg" data-size="1085x819"><img loading="lazy" src="https://propiro.github.io/media/posts/25/gallery/2022-02-08_11h46_32-thumbnail.jpg" alt="So what, we doing arduino cluster now?" width="768" height="580"></a>
<figcaption>So what, we doing arduino cluster now?</figcaption>
</figure>
</div></div>
<p>No that I know inserts fit nicely into frame, and arduino is secured, time to make some inserts for components I'll use in near future. While im aware that from this point i can make basically any insert i want as long component fit inside the frame, I'll limit myself to things i'll use in near future in my project that started this project, namely:</p>
<ul>
<li>two step down converters LM2596</li>
<li>small protoboard</li>
<li>prototype pcb</li>
</ul>
<p>Step down converters and small prototype board are so small, I'll put them on separate halves of insert plate, so it adds even more customisation freedom. I've made one universal print for 3 sizes of pcbs I've found around, as well one very universal that can be used with zipties for cables / weird components:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/25/2022-02-08_11h54_50.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/25/responsive/2022-02-08_11h54_50-xs.jpg 300w ,https://propiro.github.io/media/posts/25/responsive/2022-02-08_11h54_50-sm.jpg 480w ,https://propiro.github.io/media/posts/25/responsive/2022-02-08_11h54_50-md.jpg 768w"  alt="PCB, halves of inserts for protoboard and step downs, universal one" width="2109" height="1206"></figure>
<p>And the result is here:</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="3">
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/25/gallery/2022-02-08_19h10_18.jpg" data-size="601x907"><img loading="lazy" src="https://propiro.github.io/media/posts/25/gallery/2022-02-08_19h10_18-thumbnail.jpg" alt="pcb screwed in as well two step down converters" width="601" height="907"></a>
<figcaption>pcb screwed in as well two step down converters</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/25/gallery/2022-02-08_19h10_10.jpg" data-size="1239x890"><img loading="lazy" src="https://propiro.github.io/media/posts/25/gallery/2022-02-08_19h10_10-thumbnail.jpg" alt="assemblling" width="768" height="552"></a>
<figcaption>assemblling</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/25/gallery/2022-02-08_19h10_27.jpg" data-size="669x896"><img loading="lazy" src="https://propiro.github.io/media/posts/25/gallery/2022-02-08_19h10_27-thumbnail.jpg" alt="completed stack" width="669" height="896"></a>
<figcaption>completed stack</figcaption>
</figure>
</div></div>
<p>Things to work on in near future:</p>
<ul>
<li>work on screw mounting points, so they dont get too loose after few usages</li>
<li>add version for arduino micro/nano, nano with shield and 18650 adapter</li>
<li>add some lcd panel for front/top</li>
<li>add some larger/taller frame so it could work as a storage for unused inserts</li>
</ul>
<p>You can get the files on my github (will be uploaded bit later). Thats all components i need for now, I have idea about LCD / dot matrix modules, as well side-panels for sticking controls/fans there and horisontal-joiner, but since this is rather iterative project, so i'll make new modules as I need them.</p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>3D FAQ</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/3d-faq.html"/>
        <id>https://propiro.github.io/3d-faq.html</id>
            <category term="quick_3d_tips"/>
            <category term="general_rant"/>
            <category term="3d"/>

        <updated>2021-08-11T02:55:51+02:00</updated>
            <summary>
                <![CDATA[
                    List of frequently asked, basic questions related to 3D, that could be answered by very simple google search, but were instead asked on one of online places, so you can link this article for lazy person to read. List isn't in any particular order. #Whats&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>List of frequently asked, basic questions related to 3D, that could be answered by very simple google search, but were instead asked on one of online places, so you can link this article for lazy person to read. <br>List isn't in any particular order.</p>
<p><em>#Whats a good 3D modelling software?<br></em>Depends. What you want to model? Common software packages are:<br>3DS Max<br>Maya<br>Blender 3d<br>Cinema4D<br>Zbrush<br>Mudbox<br>Sketchup<br>and of course, immortal Wings3D</p>
<p><em>#Whats a good texturing program?</em><br>Depends. What you want to texture? Industry is dominated by:<br>Substance Painter<br>Quixel Mixer<br>Substance Designer (more procedural, node based software)<br>Adobe Photoshop (used in old workflows)</p>
<p>#I want to 3d model 3d models!<br>Pick up 3DS Max<br><br>#I want to make detailed characters!<br>Pick up Zbrush</p>
<p>#I want to animate!<br>Pick up Maya</p>
<p>#I want to make models for 3dprinting!<br>Fusion360, MOI3D, Freecad</p>
<p>#I want to render nice things!<br>3DS Max, Maya, Blender3D, Cinema4d</p>
<p>#I dont have money!<br>Pick up Blender3d</p>
<p>#I want to make games!<br>Learn about what exactly you want to do in games, multiple people do multiple things. Assuming you want to make 3d models, pick up 3DS Max/Maya/Blender3d, also learn game engine - Unreal Engine / Unity3d are most popular ones.</p>
<p>#Do I need 3d pen/tablet/3d mouse?<br>Not really, tablet helps with 3d sculpting though (Zbrush, Mudbox). 3D Mices are usually gimmick, only get one if you dont have other things to spent money on. Always try to borrow one / use it at studio/school before buying, or it might end up collecting dust.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Ghetto-rigging NAS to keep pushing power button in case of power failure </title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/ghetto-rigging-nas-to-keep-pushing-power-button-in-case-of-power-failure.html"/>
        <id>https://propiro.github.io/ghetto-rigging-nas-to-keep-pushing-power-button-in-case-of-power-failure.html</id>
            <category term="technology"/>
            <category term="hacks"/>

        <updated>2021-12-23T07:47:28+01:00</updated>
            <summary>
                <![CDATA[
                    tl;dr Have NAS NAS started randomly (sometimes 3x a hour / every 3 months) shutting itself down, and "auto power on" didn't worked. Decided to make a watchdog device to turn it on. Made a watchdog. Here is a story of something that should took&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><em>tl;dr</em><br><em>Have NAS</em><br><em>NAS started randomly (sometimes 3x a hour / every 3 months) shutting itself down, and "auto power on" didn't worked.</em><br><em>Decided to make a watchdog device to turn it on.</em><br><em>Made a watchdog.</em><br><br>Here is a story of something that should took 1hour, and took 5h, because chinkman decided to mix the colors in usb cable, and I've assumed immidiately that I did everything wrong, checking polarisation of usb cable at the very end. Thats 2x 85cent attiny in damages, and 4h of crazy debugging of what was wrong.<br><br>Thats beign said:<br><br>My QNAP NAS for some time had a weird issue, where it'd shut itself down (thermals are ok, ram is ok, hdds are ok, believe me i've tried everything), and QNAP service after 2 months of pingponging my messages said finally that warranty period is over, sucks to be me. <br><br>I can live with 3-4minute downtimes before it reboots, however, the most annoying problem (connected to the shutdowns I assume) is that power button dont work immidiately - I press it, and there is random chance of it working and booting, or just powering system for a split second, and shutting it down (capacitor issue? Im lacking technological knowledge to diagnose it sadly). Sometimes it works at 3rd press, sometimes at 40th press, and the attempted boot - shutdown cycle takes around 5 seconds, and I really dont want to spent 5 minutes standing near my hardware rack pressing button.<br><br>So, a watchdog idea was made:<br>- it has to be as low invasive as possible<br>- it should give me ability to swap parts rather quickly, without much desoldering<br>- it should be inside NAS, no dangling cables outside<br>- it should be somewhat "smart" - dont just press the button infinitely, but detect if system turned on / shut itself down<br>- it can be turned on/off from outside without deassembling the case, in case i want to swap disks for example<br>- must be made using zipties<br><br>Schemats is quite simple:</p>
<figure class="post__image" ><img loading="lazy" src="https://propiro.github.io/media/posts/23/2021-02-13_14h17_04.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/23/responsive/2021-02-13_14h17_04-xs.png 300w ,https://propiro.github.io/media/posts/23/responsive/2021-02-13_14h17_04-sm.png 480w ,https://propiro.github.io/media/posts/23/responsive/2021-02-13_14h17_04-md.png 768w"  alt="watchdog schematic" width="1235" height="886">
<figcaption >watchdog schematic</figcaption>
</figure>
<p><br>simple schemat of part connections<br>So general idea is:<br>Its powered by step-down converter that makes 5V for attiny85 from NAS 12V, its soldered directly to the motherboard pads to feed power as soon as power connector is plugged in - there is small slide-switch outside so i can cut off power to attiny.<br>It monitors USB power, resistor is to eliminate noise (randomly picked because im lazy, values are calibrated in code). At first i've used pins from debug interface and check for logical signal of 3.3v, but silly me realised after few minutes, that at some point interface might stop sending things, so after several minutes of beign inactive, watchdogs started pressing power button again, because of inactivity. <br>In case no USB power is detected, it starts routine of "pressing" the switch for 200ms through relay breakboard, and gave it some time to finish boot sequence (if it starts)<br><br>Few pictures of how it went, with short descriptions.</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-columns="2">
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h39_19.png" data-size="2330x1831"><img loading="lazy" src="https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h39_19-thumbnail.png" alt="" width="768" height="604"></a>
<figcaption>ghetto bondage</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/23/gallery/photo5852529884906239716.jpg" data-size="1280x960"><img loading="lazy" src="https://propiro.github.io/media/posts/23/gallery/photo5852529884906239716-thumbnail.jpg" alt="" width="768" height="576"></a>
<figcaption>power button cables</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/23/gallery/photo5852529884906239725.jpg" data-size="1280x960"><img loading="lazy" src="https://propiro.github.io/media/posts/23/gallery/photo5852529884906239725-thumbnail.jpg" alt="" width="768" height="576"></a>
<figcaption>more bondage</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/23/gallery/photo5852529884906239710.jpg" data-size="1280x960"><img loading="lazy" src="https://propiro.github.io/media/posts/23/gallery/photo5852529884906239710-thumbnail.jpg" alt="" width="768" height="576"></a>
<figcaption>usb power ping feeding HIGH signal</figcaption>
</figure>
<figure class="gallery__item"><a href="https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h40_07.png" data-size="1221x853"><img loading="lazy" src="https://propiro.github.io/media/posts/23/gallery/2021-02-13_14h40_07-thumbnail.png" alt="" width="768" height="537"></a>
<figcaption>testing watchdog, along with simple step-down converter (from 20V to 5 so attiny doesnt melt)</figcaption>
</figure>
</div></div>
<p>And code that runs on the watchdog:<br><br><br><code>#define NUM_SAMPLES 10</code><br><code>#define LED_PIN 1</code><br><code>#define ANALOG_PIN A3</code><br><code>#define POWER_PIN 4</code><br><code>#define RESTART_DELAY 1400</code><br><code>#define WORKING_VOLTAGE 4.1</code><br><br><code>bool restartingLED = true;</code><br><code>int samplesSum = 0;</code><br><code>unsigned char sample_count = 0;</code><br><code>float voltage = 0.0;</code><br><br><code>// the setup routine runs once when you press reset:</code><br><code>void setup() {</code><br><code>randomSeed(analogRead(0));</code><br><code>// initialize the digital pin as an output.</code><br><code>//pinMode(0, OUTPUT); //LED on Model B</code><br><code>pinMode(LED_PIN, OUTPUT); //LED on Model A or Pro</code><br><code>pinMode(POWER_PIN, OUTPUT); // relay</code><br><code>pinMode(ANALOG_PIN, INPUT); //</code><br><br><code>}</code><br><br><code>// the loop routine runs over and over again forever:</code><br><code>void loop() {</code><br><br><code>//pressPower(100);</code><br><code>//delay(1000);</code><br><code>while (sample_count &lt; NUM_SAMPLES) {</code><br><br><code>//samplesSum += debugAnalogRead(300, 100);</code><br><br><code>samplesSum += analogRead(ANALOG_PIN);</code><br><code>sample_count++;</code><br><code>if (restartingLED == true) {digitalWrite(1, HIGH);}</code><br><code>delay(100);</code><br><code>if (restartingLED == true) {digitalWrite(1, LOW);}</code><br><br><code>}</code><br><code>voltage = ((float)samplesSum / (float)NUM_SAMPLES * 5.015) / 1024.0;</code><br><br><code>if (voltage &lt; WORKING_VOLTAGE)</code><br><code>{</code><br><br><code>restartingLED = true;</code><br><code>pressPower(200);</code><br><code>}</code><br><code>if (voltage &gt;= WORKING_VOLTAGE)</code><br><code>{</code><br><code>restartingLED = false;</code><br><code>}</code><br><code>// wait for a second</code><br><br><code>sample_count = 0;</code><br><code>samplesSum = 0;</code><br><code>}</code><br><br><br><code>void pressPower(float delayVal)</code><br><code>{</code><br><code>digitalWrite( 4, HIGH);</code><br><code>delay(delayVal);</code><br><code>digitalWrite(4, LOW);</code><br><code>delay(RESTART_DELAY - delayVal);</code><br><br><code>}</code><br><br><code>void turnLed(int state)</code><br><code>{</code><br><code>if (state == 0)</code><br><code>{</code><br><code>digitalWrite(1, LOW);</code><br><code>}</code><br><code>if (state == 1)</code><br><code>{</code><br><code>digitalWrite(1, HIGH);</code><br><code>}</code><br><code>}</code><br><br><code>float debugAnalogRead(float voltage, float range)</code><br><code>{</code><br><code>float voltageReturn = 0;</code><br><code>voltageReturn = voltage + random(-1 * range, range);</code><br><br><code>return voltageReturn;</code><br><code>}</code><br><br> What I've learned during making this, is that to never trust chinesse manufacturers - my usb cable that i've used had colors swapped for ground and vcc, so i've managed to burn 2 attinys before checking EVERYTHING on my side, only to find this issue after 5h of debugging.<br><br>Anyway, it works, and by frantical clicking it lets me know IF the server actually died ;-)<br><br> <br><br> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>A handy dictionary of terminology used by 3d artist doing 3d art in 3d art industry.</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/a-handy-dictionary-of-terminology-used-by-3d-artist-doing-3d-art-in-3d-art-industry.html"/>
        <id>https://propiro.github.io/a-handy-dictionary-of-terminology-used-by-3d-artist-doing-3d-art-in-3d-art-industry.html</id>
            <category term="quick_3d_tips"/>
            <category term="gamedev"/>
            <category term="3d"/>

        <updated>2021-12-20T23:36:23+01:00</updated>
            <summary>
                <![CDATA[
                    Recently more and more people are picking 3d art/ gameart (thanks, 𝓫𝓵𝓮𝓷𝓭𝓮𝓻) as their hobby and/or career path, and I've noticed more and more confusion about all the weird words the 3d dinosaurs throw at newbies - Having this in mind, I've decided to start&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <address>Recently more and more people are picking  3d art/ gameart (thanks, 𝓫𝓵𝓮𝓷𝓭𝓮𝓻) as their hobby and/or career path, and I've noticed more and more confusion about all the weird words the 3d dinosaurs throw at newbies - Having this in mind, I've decided to start this article/blogpost, that'll most likely grow in size. I'll try to explain things in layman terms, without getting into any math, but some knowledge or googling on your own will be required, especially after you have some keywords from this list. Starting with terms from last week:</address>
<h2><strong>#A</strong></h2>
<p> </p>
<p>Albedo map - technically, albedo its a ratio of radiation reflected to radiation incident. For CG, all you need to know that albedo map is a map of colors, without any light data - no shadows, no ao, no specular reflections applied onto diffuse.</p>
<p>Ambient Occlusion - often used as Occlusion (bit incorrect), Ambient (bit incorrect), AO - name for a shading type that shows how much an object is "occluded" from or exposed to light, and that include self-shadowing - if you have a 3d box, and make hole in it, naturally the hole inside should be darker, since ambient light have more troubles getting inside - this applies to almost all objects that are close to each other. You can either render AO in realtime using various techniques like SSAO, or bake it into a texturemap. </p>
<p>Ambient Occlusion map - AO map - a baked (rendered) map with detailed informations about ambient occlusion lighting - sometimes called lightmap as well, but not every lightmap might contain ao, and not every ao map could contain shadows - sometimes these are two different sets of maps, usually used inside game engines on levels. Usually stored in single 8bit channel.</p>
<p>Alpha card - coloquial term describing a texture with alpha, used most of the time to mimic fur/hair/brows/leaves and similiar objects, that are modelled on sumplified geometry, but contain a lot of transparency. Often used by character artists / foliage artists</p>
<h2>#B</h2>
<p>Banding - an unwanted effect on normalmap (or gradients in general), happening because there is not enough colors to make smooth transition from one color to another. Usually fixed by forcing dithering, or using higher BPP value.</p>
<p>Baking, baking maps - a process of rendering effects on 2d textures - most commonly used to describe transfering high detail data from highpoly to lowpoly models, as well ambient occlusion, curvature, thickness - there is a lot of map types. You'll often heard people talking about "baking normals", meaning they'll bake geometry normals from highpoly model. If someone say he'll bake some lightmaps, means they'll be baking  light data to map/set of maps to make it more perfomance-wise, without using realtime lighting (Ambient occlusion map is example of light baked into texture - all those nice shadows in corners are pre-rendered, because calculating them on the go is expensive) </p>
<p>Basecolor - sometimes used instead of Albedo - means the color of a surface, unaffected by light. A core component in PBR rendering/texturing - you want this surface component to represent just the color, without influence of light/shadow/specularity/roughness/ etc etc. If its yellow, its yellow on basecolor, and just because blue light makes it green, changes nothing.  While packing maps for models, usually having _COL prefix at the end.</p>
<p>Binormal</p>
<p>Bleeding, color bleeding, mipmap bleeding, light bleeding - a term used to describe texture issue that happens when pixels from one part of the unwrapped mesh influent/mix/blend with pixels on different part - cause either by low resolution, wrong unwrapping, no padding/margin on textures, sometimes by incorrect light baking settings.</p>
<p>Blender - a device used to blend things.</p>
<p>Booleans, boolean modelling - modelling technique (often used with dynamesh when describing) based on adding/substracting shapes one from another, rather than modelling the shape from scratch. Most important advantage is timesaving, while disadventage is very messy topology that require cleaning, and not perfect control over topology. Used in constructive solid geometry.</p>
<p>Brep - acronym for Boundary REPresentation - basically what most people call "cad modelling" - you dont operate on polygons/verticles, but instead you create surfaces using lines/curves, and extrude/boolean them. Look how Fusion360 / Moi3d modelling looks like.</p>
<p>Bump map - a very general term describing a map that stores information about disortion of surface normals of an object - it could be heighmap, normalmap, displacement map, flow map, parallax map - anything that is stored in a 2d space that influences surface normals of 3d object. Most commonly when someone say "bumpmap" they mean black and white image that makes surface of a model looks "bumpy" or more "noisey" - like a concrete for example, by changing its pixel heigh on texture (it doesnt modify actual geometry).</p>
<p>BPP - bit per pixel - amound of bits you use to store pixel value, commonly its 8 bits for each channel (so R,G,B takes 24Bits, if you add Alpha channel, RGBA takes 32Bits) to store color information. With normalmaps, its more common to store (at least for work, not finished, engine-ready content) data in 16 BPP space, to fit more informations and prevent banding.</p>
<h2>#C</h2>
<p>CAD - Acronym for Computer Aided Design, which means every work related to art you do on PC rather than with pen and paper - usually used incorrectly to describe BREP modelling style. </p>
<p>Chunk, UV Chunk - same as UV island - a separate piece of unwrapped model [resent on UV map, can be one triangle, can be group of triangles/quads/ngons.</p>
<p>Collada - file format (COLLA borative D esign A ctivity) used as an alternative to FBX to transfer 3d data between compatibile applications, without limitations of OBJ file - It could include skinning, animation, and physic, BREP data and morphs for example, while OBJ only stores polygonal data of models.</p>
<h2>#D</h2>
<p>DAE - Digital Asset Exchange format that store data in XML format, look at collada for more thorough description.</p>
<p>Diffuse map - Map/Texture describing color of the surface, with addition to shading/reflections baked into it - you can merge ambient occlusion pass to fake depth on the model, or highlight corners to give them fake shiny look - sometimes refeered to as an "old workflow" - as it was common to mix lighting data with color data in pre-PBR authoring methods.</p>
<p>Displacement - technique that makes verticles of mesh change their position according to map/supplied parameter value, making it either higher or lowed from the original surface. Main difference between displacement and normalmapping/parallax mapping / bumpmapping is that actual geometry is changed, instead of just texture pixel data. </p>
<p>Displacement map - a texture map with pixels representing values for displacement alghoritm, making geometry displace according to UV mapped data. Note that to see any kind of change you need actual geometry there to be displaced, so it works best on high-density meshes (if you map displacement texture to flat, 2 triangle plane, it wont get any displacement, because there is no verticles to displace except 4 corner ones) </p>
<p>Dithering - a technique of using noise to hide banding / color changes on gradients, or blending phases with alpha - with high enough resolutions, making certain patterns of noise pixels, its possible to cheat eyes/brain into thinking that color transition is smooth, while its not.   </p>
<p>Dynamesh - Originally Zbrush technique often used in pair with boolean modelling, that makes a dense, more-or-less even topology on source geometry, allowing user to sculpt on that model with ease. While used with "Boolean-Dynamesh" technique, usually means making dense topology on model, so it can be easily smoothed on corners, making it suitable for baking maps to lowpoly.</p>
<h2>#E</h2>
<p>Edge - a line between two points. Three edges (actually two, but you want to avoid it as its considered a bug/issue) or more are required to make a closed surface that can be shaded.</p>
<p>Edge Flow - a general term used to describe "smooth" way across edges on model.</p>
<h2>#F</h2>
<p>Fbx - fileformat commonly used in 3d industry, Shortcut for FilmBox. Favoured for ability to transfer lot of additional informations alongside geometry, like lights, cameras, some modificators (like turbosmooth or skin) between applications and engines.</p>
<p>Flowmap</p>
<h2>#G</h2>
<h2>#H</h2>
<p>Hard Edge</p>
<p>Heightmap</p>
<h2>#I</h2>
<p>Interpolation</p>
<h2>#J</h2>
<p>Jitter</p>
<p>Joint Surfaces</p>
<h2>#K</h2>
<h2>#L</h2>
<p>Lightmap - sometimes called AO map or ambient map - a map that contains lighting information, usually stored inside 8Bit color space (so, a single gray channel), unless you need something like Directional normal map.</p>
<p>Lookdev</p>
<h2>#M</h2>
<p>Max - Autodesk 3d studio max, modelling package, favoured mostly by modellers. </p>
<p>Maya - Autodesk Maya, modelling package, favoured mostly by animators.</p>
<p>Megascans, quixel megascans - colloquial name for photoscanned assets, available on Epics Megascan store - usually environmental, very realistic and very heavy in terms of geometry 3d models that werent modelled by hand, but "generated" from lots of 2d photos, using technique called photogrammetry (some assets are scanned using different ways, but thats another tale).</p>
<p>Metalness, metallic - property of surface defining how conductive it is - while it should be either 0 or 1 (black or white, not grayscale) - as things are either conductive or dielectric (non-conductive), things like dirt or rust tend to be represented by grayscale values, which often cause problems in realtime engines, like unity or unreal (without help of clipping values to 0/1).</p>
<p>Metalness map - a map that stores metal value of mapped surface, 0 beign non-metallic, white beign metallic. Used in PBR rendering, tied to IOR / Index of Refraction known from offline-renderers. Usually stored as component alongside other maps in RMA/MRA, or separately as 8bit grayscale, commonly using _MET suffix in name.</p>
<h2>#N</h2>
<p>Node, node-based</p>
<p>Normal</p>
<p>Normalmap</p>
<h2>#O</h2>
<p>Obj - Wavefront  Object file format - very popular in open source softwares, able to store simple geometry and material data inside.</p>
<p>Offline Rendering - rarely heard term, describing anything that is NOT realtime - if you need to press f9 and wait 10 minutes for one frame to render, you can consider it offline rendering (unless you play game at 0.01 FPS, then... then its just very slow) - usually outputs of offline renderings are used later, be it as a source material/ingrdient of realtime-application, or part of a movie that will be played in 60frames per second, even if rendering it took 2 months.</p>
<h2>#P</h2>
<p>Packmap, packed map - term used for a map that is composed of various sub-maps describing different things (so technically normalmap is packmap as well), usually multiple 8 bit channels with data into one 24/32 bit image, which while might look odd, stores valuable informations for engine/renderer. A most common example would be RMA / MRA map - RMA means [R]oughness, [M]etalness, [A]mbient data separated to channels of texture - Red, Green, Blue (and alpha if used). MRA is [M]etalness, [R]oughness, [A]mbient - different order of data, there is a reason for storing Roughness on green, but its too technical, so maybe another time (its about how DXT textures are compressing channels)</p>
<p>Padding - texture padding, margin, uv margin - a distance between uv chunks on UV map, maintained to prevent texture bleeds from one pixel group to another one on UV pieces that are too close to each other.  </p>
<p>Photogrammetry</p>
<p>Polygon - poly + gon, sometimes used in place for n-gon - means a surface object defined by verticles and edges, often are filled using triangles to five it a solid look (opposed to wireframe look).</p>
<p>Polymodelling</p>
<p>Post-Processing, postpro - term used for any tricks/work done after rendering is done - this applied both to offline rendering and realtime rendering - an example of postprocessing of render would be color correcting, or adjusting curves, or even adding a watermark - you didnt rendered it at first pass, you "added it in postpro" - you can also fix some minor issues during postpro, if you notice that 48h render have a screw that you forgot to hide, you can erase it in 2d software, and call it "removed in postpro".  </p>
<p>Pixel Per Meter, PPM</p>
<h2>#Q</h2>
<p>Quad - a geometric surface created from two triangles sharing one edge - could be named a square, but difference is, square could be made from multiple quads, and if you use term "quad", default thinking is "two triangles"</p>
<h2>#R</h2>
<p>Realtime rendering - term used to describe anything that is shown directly via engine or viewport, without need of "offline" pre-rendering/calculating, coloquially anything that dont require waiting for end-result - a game can be realtime, but so does a movie - cutscenes made on game engine are often show in realtime. Changes in your viewport can be also called beign realtime - unless you start pre-rendering parts of your models, like ambienc occlusion or simulating particles. </p>
<p>Roughness - term defining how "rough" a surface is, usually used to describe how well it reflects light 0 rough surface (like concrete) will be worse reflector than smooth surface (glass) - its very simplified example though </p>
<p>Roughness map - a map that stores roughness information, usually in 8bit space. Either component of RMA / MRA map on dedicated channel, or saved as grayscale, 8bit map with suffix of _RGS</p>
<h2>#S</h2>
<p>Smoothgroups</p>
<p>SSS</p>
<p>Subdivision Modelling, Sub-d</p>
<h2>#T</h2>
<p>Tangent</p>
<p>Tangent space</p>
<p>Tiled, tiled texture</p>
<p>Triangle - simplest 3d  surface you can get in 3d modelling application - three points, three edges, surface with normal between them. From triangles everything in 3d is modelled, so if you see a Quad, its 2 triangles in reality. Same goes for ngons.</p>
<p>Trim sheet</p>
<p>Texel</p>
<p>Texel density</p>
<h2>#U</h2>
<p>UV map - a representation of 3d shape "unfolded" in 2d space (mind-blown - UV means U and V coordinates, similiar to XY or XYZ (then were talking about UVW map) ) - usefull when you want to paint details on your 3d model - its easier to make a circle on 2 dimensional space instead of 3 dimensional space.</p>
<p>Unwrapping, unwrap - process of "unfolding" a 3d model on 2d space - think about it like reversing an origami or gluedpaper model - you have a box, and you end up with 6 squares on flat surface.</p>
<h2>#V</h2>
<p>Vector</p>
<h2>#W</h2>
<h2>#X</h2>
<h2>#Y</h2>
<h2>#Z</h2>
<p>Zbrush, Z, zergbrush - 3d Sculpting software that uses clever rendering technique to allow user to work on very very highly detailed surfaces - commonly used by character artists</p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
<p>Please note that this is 3d-content focused explanation, so some terms could have slightly different meaning in other fields (like banding or dithering). At some point, images with examples will be added under definitions, but it takes lot of time to make certain examples, and i dont want to steal ones from random places over internet.</p>
<p>I've spent quite a lot time making this list (and updating), so at least try not to steal from it blatantly, and instead of copying everything, link people here. My english is bad enough to be recognisable anyway.</p>
<pre>This post will be updated along with new terminology I'll be asked about, feel free to ask in comments as well, or folks who are here via discord server / forum, you know where to find me. If youre going to flex about how much you know about 3d big words, at least check if youre not doing it before author of this post</pre>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Portable, Triple Screen Station</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/portable-triple-screen-station.html"/>
        <id>https://propiro.github.io/portable-triple-screen-station.html</id>
            <category term="technology"/>
            <category term="other"/>
            <category term="DIY"/>

        <updated>2020-11-10T00:24:15+01:00</updated>
            <summary>
                <![CDATA[
                    For quite some time, I've wanted a triple screens but portable. I was overwhelmed with joy few years later, when slide n joy was announced, only for it to turn into scam. Still remembering some military solutions I've got to use at some point of&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>For quite some time, I've wanted a triple screens but portable. I was overwhelmed with joy few years later, when slide n joy was announced, only for it to turn into scam. <br>Still remembering some military solutions I've got to use at some point of my work (i think GETAC made them, not sure) I really desired a triple-screen solution to monitor my server gear, or sometimes connect to a workstation that wasn't my home-computer, as i hate working on single screen. After some big brain thinking, and making list of requirements, I've came up with:</p>
<ul>
<li>three screens (who would have guessed?)</li>
<li>at least full HD resolution</li>
<li>ability to connect video signal through HDMI (normal-sized connection)</li>
<li>ability to connect to a laptop/pc that DONT have 3 hdmi-out connections (dont have such GPU for example), so can use USB connection</li>
<li>be either powered through separate power cable or USB connectors</li>
<li>be foldable with screens facing inside, so they dont break easily</li>
<li>be confined completely in some kind of case with handle, so its truly portable, not "mommy mommy please help me move this bunch of wires from this table to another room</li>
<li>optionally, have keyboard stored inside, so it can be connected and used as poor mans KVM</li>
<li>optionally, be able to store a tiny pc inside, but thats a long shot</li>
</ul>
<p>First thing to do was to obrain screens and the case that would hold everything. Since I dont have problem with <span style="text-decoration: line-through;">alcoholism </span>aliexpress, i've picked these three, as they had the best cost to thickness ratio, and believe or not, theyre apperently IPS screens that display colors quite nicely:<br><br><a href="https://pl.aliexpress.com/item/32949964660.html?spm=a2g0s.9042311.0.0.27425c0fZQAAqD">13.3 FHD IPS portable screen</a> (probably some laptop screens crafty chinamen converted to portable screen, adding a control display board)<br><a href="https://pl.aliexpress.com/item/4000677757547.html?spm=a2g0s.9042311.0.0.27425c0fZQAAqD">Case that looked sturdy, and have dimensions large enough to hide 3 screens and keyboar</a><br><a href="https://pl.aliexpress.com/item/4000111647544.html?spm=a2g0s.9042311.0.0.4cbb5c0foKUL3F">usb -&gt; hdmi "graphic card" </a><br><br>and a lot of adapters / converters / sockets were also bought, but you'll see them on the screenshots later.<br>After screens arrived, and suprisingly were not broken / bad quality, I've started thinking about hinges. <br>After watching some people struggle with it, either gluing velcro straps (pinus tech dips who broke the screen in the process) or literal metal hinges (jerry rig something something), I knew it wont do in my case, as I hoped it'll look at least half-proffesional.<br>I've ended designing a 3d hinges that would be screwed into the metal case of the screens. This is the hinge for sidescreen that is closer to centerscreen</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/21/ezgif.com-optimize-1.gif" alt="" width="600" height="371"></figure>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/21/ezgif.com-optimize2.gif" alt="" width="600" height="371"></figure>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/21/ezgif.com-optimize.gif" alt="" width="600" height="322"></figure>
<figure class="post__image">First screen (the closer one) hinges turned out nicely:<br><img loading="lazy"  src="https://propiro.github.io/media/posts/21/unknown.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/21/responsive/unknown-xs.png 300w ,https://propiro.github.io/media/posts/21/responsive/unknown-sm.png 480w ,https://propiro.github.io/media/posts/21/responsive/unknown-md.png 768w"  alt="" width="960" height="1280"></figure><br><figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/21/photo5857281639154038124.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/21/responsive/photo5857281639154038124-xs.jpg 300w ,https://propiro.github.io/media/posts/21/responsive/photo5857281639154038124-sm.jpg 480w ,https://propiro.github.io/media/posts/21/responsive/photo5857281639154038124-md.jpg 768w"  alt="" width="891" height="668"></figure>
<figure class="post__image">For right side screen, hinge need to have bigger offset, to compensate distance from center screen:<br><img loading="lazy"  src="https://propiro.github.io/media/posts/21/2020-11-10_00h19_31.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/21/responsive/2020-11-10_00h19_31-xs.png 300w ,https://propiro.github.io/media/posts/21/responsive/2020-11-10_00h19_31-sm.png 480w ,https://propiro.github.io/media/posts/21/responsive/2020-11-10_00h19_31-md.png 768w"  alt="" width="1606" height="885"></figure><br><br>(As someone might point out, Im using polymodelling software - 3ds max - to author meshes for 3d printing. While I know CAD modelling quite good, I only polymodel it to piss some people on 3d modelling discord server, <em>just because I can</em>)</p>
<p> </p>
<p>(this post will be updated later when I push development forward)</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Getting best normalmap bakes</title>
        <author>
            <name>piro</name>
        </author>
        <link href="https://propiro.github.io/getting-best-normalmap-bakes.html"/>
        <id>https://propiro.github.io/getting-best-normalmap-bakes.html</id>
            <category term="techart"/>
            <category term="quick_3d_tips"/>
            <category term="3d"/>

        <updated>2021-06-08T19:30:38+02:00</updated>
            <summary>
                <![CDATA[
                    AKA why there are seams on my normalmaps / why there is weird shading on my model tl;dr version for people who cant read: synchronise your smoothgroups and uv islands. for people who arent very good at thinking: uv piece = uv island = uv&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><strong>AKA why there are seams on my normalmaps /</strong></p>
<p><strong> why there is weird shading on my model</strong></p>
<pre><code>tl;dr version for people who cant read: synchronise your smoothgroups and uv islands.</code><br><br><code>for people who arent very good at thinking: uv piece = uv island = uv chunk, and that means one unwrapped piece of the model. It might be a triangle, it might be a quad, it might be a bunch of triangles and quads - just one continous piece of uv<br><br></code>Normal version for people without adhd that can focus on written guides:</pre>
<p>One of most common technique in gameart is baking highpoly models to lowpoly models, to get nice rounded corners, that fake the overall low-amount of triangles our ingame-model have.</p>
<p>What most beginners (but not only) have problems, are normalmaps - beign highly technical map, that many people dont know what represent, except "they're kinda blueish" - most baking errors are visible on them, even or perfectly modelled lowpoly and highpoly models, and their quality dictate how our model will look after we texture it.</p>
<p>To get rid of seams and bad shading, we need to make sure our model have synchronised uv islands with smoothgroups (hard edges for maya users), and enough padding between uv chunks. But what does it mean?</p>
<p>Look at this:</p>
<figure class="post__image post__image" ><img loading="lazy" src="https://propiro.github.io/media/posts/20/2020-11-07_13h34_21.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h34_21-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h34_21-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h34_21-md.png 768w"  alt="Model Smoothing" width="1157" height="1349">
<figcaption >1st is weird, 2nd is plain bad, 3rd is what you want</figcaption>
</figure>
<p>While no smoothgroups is somewhat a default state you can start with the lowpoly, you want them to be set up correctly. For some weird reason, people try to bake models on 1 smoothgroups, which is (especially for hardsurface models, but there might be case its right thing to do - for example baking a sphere ( ͡° ͜ʖ ͡°) ) wrong, and at first glance gives out very bad results, both before baking and baked. Thats why you want smoothgroups to be set up correctly, so the model shades nicely, and then make UV islands based on the smoothing, to preserve all corners/seams:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/20/2020-11-07_13h35_26.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_26-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_26-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_26-md.png 768w"  alt="UV Seams" width="1684" height="979"></figure>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/20/2020-11-07_13h35_37.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_37-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_37-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h35_37-md.png 768w"  alt="and smoothgroups" width="1684" height="979"></figure>
<p> That solves 90% of issues with normalmap. Another thing to look for is padding between uv chunks:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/20/2020-11-07_13h26_25.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h26_25-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h26_25-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h26_25-md.png 768w"  alt="no padding" width="1590" height="1570"></figure>
<p>While it might look correct, and tightly packed, its not actually great - we used UV space to the limit, but during baking and texturing we'll experience bleeding from near uv pieces - that means colors from one piece might be visible on other piece. Also can cause problems during mip-mapping.</p>
<p>This is what we want:</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/20/2020-11-07_13h33_14.png" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h33_14-xs.png 300w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h33_14-sm.png 480w ,https://propiro.github.io/media/posts/20/responsive/2020-11-07_13h33_14-md.png 768w"  alt="" width="1586" height="1588"></figure>
<p>We traded off some UV space (texel density of texture) for a lot of padding between uv pieces - this will not only bake correctly, but as well prevent from color bleeding on original resolution and mipmapped resolution.</p>
<p>Here is comparison of meshes with combination of padding/no padding as well smoothgroups set up / not set up / one smoothgroup. CAN YOU GUESS WHICH ONE IS CORRECT?</p>
<figure class="post__image"><img loading="lazy"  src="https://propiro.github.io/media/posts/20/composite_presentation.jpg" sizes="(min-width: 61.3125em) 50vw, 100vw" srcset="https://propiro.github.io/media/posts/20/responsive/composite_presentation-xs.jpg 300w ,https://propiro.github.io/media/posts/20/responsive/composite_presentation-sm.jpg 480w ,https://propiro.github.io/media/posts/20/responsive/composite_presentation-md.jpg 768w"  alt="" width="3222" height="2884"></figure>
<p class="align-center">(download high resolution image at the bottom of this post)</p>
<p>You can view fully textured asset that uses this mesh, made using described technique here:</p>
<p><a href="https://www.artstation.com/artwork/xJqGX1">https://www.artstation.com/artwork/xJqGX1</a></p>
<p>You can high resolution images, as well files used for baking here:</p>
<p><a href="https://mega.nz/file/MEkwzYJA#thvvOcMq8Xwc_R60Fq5oHQSg1m9ch9_UBUr7jhCtPQI">renders</a> - <a href="https://mega.nz/file/hR1kRCRa#lUdtB2xhPAO7aKY6fB-oqnwJkxe3a9p153jCJzrdb1I">normalmaps</a> - <a href="https://mega.nz/file/FBsS1QQB#5JsZkdMHRzLP5QrjPBDNBUDFGb0IphuHxjAds800XQM">meshes</a> - <a href="https://mega.nz/file/MA9QzaqZ#Zgr4fofIMICeKqvrvoLTZ2q6qYI93Zrze3CZVVPoZiE">comparison</a> - <a href="https://mega.nz/file/kYt0TIBI#vGXjt9KS5sO4SmVa8YGud14Qj72oolaTIEuyO0diOUA">marmoset bake scene</a></p>
<p> </p>
<p> </p>
<p> </p>
<p> </p>
            ]]>
        </content>
    </entry>
</feed>
